{"version":3,"file":"vue.js","sources":["../src/utils/index.js","../src/observer/array.js","../src/observer/dep.js","../src/observer/index.js","../src/observer/watcher.js","../src/initState.js","../src/compiler/type.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/utils/strategy.js","../src/utils/merge.js","../src/hooks/life-hooks.js","../src/init.js","../src/global-static-api.js","../src/index.js"],"sourcesContent":["/**\r\n * 是否是函数\r\n * @param {*} source 对象\r\n * @returns\r\n */\r\n export function isFunction(source) {\r\n    return typeof source === \"function\";\r\n  }\r\n  \r\n  export const isObject = (source) => {\r\n    return source != null && typeof source === \"object\";\r\n  };\r\n  ","let oldArrayProto = Array.prototype; //原来的数组的原型\r\nlet newArrayProto = Object.create(oldArrayProto);\r\n// 改写7个会改变原数组的方法\r\n// shift splice, push, pop sort, unshift, reverse\r\nconst methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\",\r\n];\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function (...args) {\r\n        let inserted;\r\n        const ob = this.__ob__; //__ob__为 Observer的实例，所以可以调用 observeArray这个方法\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\": // 插入元素\r\n              // 新增的元素 可能是对象\r\n              inserted = args;\r\n              break;\r\n            case \"splice\": // 数组最强方法 splice(start, delCount, ...新增元素)\r\n              inserted = args.slice(2); // 新增的元素\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        console.log(`重写的${method}方法被调用------> this = `, this);\r\n        if (inserted) {\r\n            // 观测新增的内容,数组\r\n            ob.observeArray(inserted);\r\n          }\r\n        const res = oldArrayProto[method].call(this, ...args);\r\n        return res\r\n\r\n    }\r\n})\r\nexport default newArrayProto","let id = 0;\r\nclass Dep {\r\n  id = id++;\r\n  constructor() {\r\n    // 属性的dep要收集watcher， 一个属性可以对应多个watcher\r\n    this.subs = [];\r\n  }\r\n  /**\r\n   * 收集当前属性 对应的视图 watcher\r\n   */\r\n  depend() {\r\n    // 这里我们不希望收集重复的watcher，而且现在还只是单向的关系 dep -> watcher\r\n    // watcher 也需要记录 dep\r\n    // this.subs.push(Dep.target);\r\n\r\n    // 这里是让watcher先记住dep\r\n    Dep.target.addDep(this); //  this -> dep; 此时的this指向调用者 dep this\r\n  }\r\n  /**\r\n   * dep 在反过来记录watcher\r\n   * @param {*} watcher\r\n   */\r\n  addSub(watcher) {\r\n    this.subs.push(watcher);\r\n    // console.log(watcher);\r\n  }\r\n  /**\r\n   * 更新视图\r\n   */\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update());\r\n  }\r\n  // 当前的watcher，类似于一个指针 指向当前的watcher\r\n  static target = null;\r\n}\r\n\r\n// watcher queue 视图渲染栈\r\nconst watcherStack = [];\r\n/**\r\n * watcher入栈\r\n * @param {Watcher} watcher\r\n */\r\nexport function pushWatcherTarget(watcher) {\r\n  watcherStack.push(watcher);\r\n  Dep.target = watcher;\r\n}\r\n/**\r\n * watcher 出栈 且让 Dep.target 指向上一个入栈的 watcher\r\n */\r\nexport function popWatcherTarget() {\r\n  watcherStack.pop();\r\n  Dep.target = watcherStack[watcherStack.length - 1];\r\n}\r\nexport default Dep;\r\n","import {\r\n    isObject\r\n} from '../utils/index';\r\nimport arrayProto from './array'\r\nimport Dep from './dep';\r\nclass Observer {\r\n    constructor(data) {\r\n        // object.definedProperty已有的数据的劫持\r\n        Object.defineProperty(data, \"__ob__\", {\r\n            value: this, // observe的实例\r\n            enumerable:false //该属性不可枚举\r\n        });\r\n        if (Array.isArray(data)) {\r\n            // 重写数组上的7个方法 这7个变异方法是可以修改数组本身的\r\n            // 保留数组原有的方法，重新部分方法\r\n            Object.setPrototypeOf(data, arrayProto);\r\n            this.observeArray(data);\r\n        } else {\r\n            this.walk(data);\r\n\r\n        }\r\n    }\r\n    walk(data) {\r\n        // 堆属性进行劫持\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observer(item))\r\n    }\r\n}\r\n\r\n// vue2 应用了defineProperty需要一加载的时候 就进行递归操作，所以好性能，如果层次过深也会浪费性能\r\n// 1.性能优化的原则：\r\n// 1) 不要把所有的数据都放在data中，因为所有的数据都会增加get和set\r\n// 2) 不要写数据的时候 层次过深， 尽量扁平化数据\r\n// 3) 不要频繁获取数据\r\n// 4) 如果数据不需要响应式 可以使用Object.freeze 冻结属性\r\n/**\r\n * vue2 慢的原因 主要在这个方法中\r\n * 定义目标对象上的属性为响应式\r\n * @param {Object} obj\r\n * @param {string|symbol} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(obj, key, value) {\r\n    let dep = new Dep() // 每一个属性都有一个dep\r\n    // 如果属性也是对象 再次劫持 childOb有值的情况下是Observe实例，实例上挂载了dep\r\n    observer(value);\r\n    // 每个属性都有一个dep\r\n    Object.defineProperty(obj, key, {\r\n        get() {\r\n            if (Dep.target) {\r\n                //当前属性，记住watcher 视图依赖收集\r\n                dep.depend();\r\n            }\r\n            return value;\r\n        },\r\n        set(newVal) {\r\n            // 监视新的属性\r\n            if (newVal === value) return;\r\n            // 新值是对象 则需要重新观测\r\n            observer(newVal)\r\n            value = newVal;\r\n            // 设置属性值的时候，通知对应watcher去更新属性值\r\n            dep.notify()\r\n        },\r\n    });\r\n}\r\nexport function observer(data) {\r\n    //  只对对象进行劫持\r\n    // 一个对象只劫持一次， 创建一个Observer类\r\n    // 不是对象 不需要劫持\r\n    if (!isObject(data)) return;\r\n    if (data.__ob__ instanceof Observer) return data.__ob__;\r\n\r\n    //判断是否劫持过对象\r\n    return new Observer(data)\r\n\r\n}","import Dep, {\r\n    popWatcherTarget,\r\n    pushWatcherTarget\r\n} from \"./dep\";\r\nlet id = 0;\r\n/**\r\n * watcher 进行实际的视图渲染\r\n * 每个组件都有自己的watcher，可以减少每次更新页面的部分\r\n * 给每个属性都增加一个dep，目的就是收集watcher\r\n * 一个视图（组件）可能有很多属性，多个属性对应一个视图 n个dep对应1个watcher\r\n * 一个属性也可能对应多个视图（组件）\r\n * 所以 dep 和 watcher 是多对多关系\r\n *\r\n * 每个属性都有自己的dep，属性就是被观察者\r\n * watcher就是观察者（属性变化了会通知观察者进行视图更新）-> 观察者模式\r\n */\r\nclass Watcher {\r\n    // 目前只有一个watcher实例 因为我只有一个实例 根组件\r\n    id = id++;\r\n    /**\r\n     *\r\n     * @param {*} vm 组件实例, 哪一个实例\r\n     * @param {Function|string} exprOrFn 渲染页面的回调函数 或者函数 或者字符串(需要把字符串转为函数) name:()=>{}, -> ()=>name,()=>{}\r\n     * @param {boolean|object} options 额外选项 true表示初次渲染 对象是额外的配置\r\n     * @param {Function} callback watch等的回调函数\r\n     */\r\n    constructor(vm, exprOrFn, options, callback) {\r\n\r\n        if (typeof options === \"boolean\") this.renderWatcher = true; //渲染watcher\r\n        // 记录vm实例\r\n        this.vm = vm;\r\n        this.options = options;\r\n        // exprOrFn是字符串 变成函数 name -> ()=>vm.name\r\n        if (typeof exprOrFn === \"string\") {\r\n            this.getter = () => vm[exprOrFn];\r\n            // TODO 有this问题在切换\r\n            // this.getter = function () {\r\n            //   return vm[exprOrFn];\r\n            // };\r\n        } else {\r\n            // 调用这个函数 意味着可以发生取值操作\r\n            this.getter = exprOrFn;\r\n        }\r\n        // 标识用户自定义watch\r\n        this.user = options?.user;\r\n        // 收集 watch等的callback\r\n        this.callback = callback;\r\n        // 收集 dep   watcher -> deps\r\n        this.deps = []; // 在组件卸载的时候，清理响应式数据使用 还有实现响应式数据等都需要使用到\r\n        this.depsId = new Set(); // dep id\r\n        // 是否懒执行\r\n        this.lazy = options?.lazy;\r\n        // dirty  计算属性使用的\r\n        this.dirty = this.lazy;\r\n        this.value = this.lazy ? void 0 : this.get(); // lazy是false的时候，创建watcher的时候就会执行一次get()\r\n    }\r\n    get() {\r\n        /**\r\n         * 1.当我们创建渲染watcher的时候 会把当前的渲染watcher放到Dep.target上\r\n         * 2.调用_render()取值 走到值的get上\r\n         */\r\n        // Dep.target = this;\r\n        pushWatcherTarget(this);\r\n        // 去 vm上取值 这里的this不是vm了，所以取值需要绑定vm\r\n        // getter函数调用为创建 watcher时的 updateComponent函数，回去调用虚拟节点的创建和更新\r\n        const val = this.getter.call(this.vm);\r\n        // 渲染完毕后清空，出栈\r\n        // Dep.target = null;\r\n        popWatcherTarget();\r\n        return val; // 计算属性执行的返回值\r\n    }\r\n    evaluate() {\r\n        // 获取到用户函数的返回值(getter返回值) 并且标识数据不是脏的\r\n        this.value = this.get();\r\n        this.dirty = false;\r\n    }\r\n    /**\r\n     * 一个组件对应多个属性 但是重复的属性 也不需要记录\r\n     * 比如在组件视图中 用到了多次的name属性，那么需要记录每次用到name的watcher吗\r\n     * @param {*} dep\r\n     */\r\n    addDep(dep) {\r\n        //   一个组件对应着多个属性， 重复的属性不应该被重复记录\r\n        // dep去重 可以用到 dep.id\r\n        const id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            // watcher记录dep\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            // dep记录watcher\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    /**\r\n     * 更新视图 本质重新执行 render函数\r\n     */\r\n    update() {\r\n        // 是计算属性\r\n        if (this.lazy) {\r\n            // 依赖的值变化 就标识计算属性的值是脏值了\r\n\r\n            return (this.dirty = true);\r\n        }\r\n        // 同步更新视图 改为异步更新视图\r\n        // this.get();\r\n        // 把当前的watcher暂存\r\n        queueWatcher(this);\r\n        // console.log(\"update watcher.................\");\r\n    }\r\n    /**\r\n     * 实际刷新视图的操作 执行render用到的都是实例最新的属性值\r\n     */\r\n    run() {\r\n        // console.log(\"run------------------\");\r\n        // 可以拿到watch最新的值\r\n        const newVal = this.get();\r\n        // watch的回调函数 传入最新的值 和上次还未更新的值\r\n        this.user && this.callback.call(this.vm, newVal, this.value);\r\n        this.value = newVal;\r\n    }\r\n    depend() {\r\n        // 之前是属性dep记录watcher\r\n        // 这里是watcher记录属性dep\r\n        // 计算属性watcher记录完之后\r\n        let i = this.deps.length;\r\n        while (i--) {\r\n            // 让计算属性watcher收集上层watcher\r\n            // curr dep -> prev watcher -> curr dep -> prev watcher\r\n            // dep.depend() -> watcher.addDep(dep) -> dep.addSub(watcher)\r\n            this.deps[i].depend(); \r\n            // 这里的this是上一层的watcher,target此时为最新的watcher,让这个新的watcher记录pop出去的dep\r\n            // target.addDep(this); //  this -> dep; 此时的this指向调用者 dep this, \r\n        }\r\n    }\r\n}\r\n\r\n// watcher queue 本次需要更新的视图队列\r\nlet queue = [];\r\n// watcher 去重  {0:true,1:true}\r\nlet has = {};\r\n// 批处理 也可以说是防抖\r\nlet pending = false;\r\n\r\n\r\n/**\r\n * 不管执行多少次update操作，但是我们最终只执行一轮刷新操作\r\n * @param {*} watcher\r\n */\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    // 去重\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // console.log(queue);\r\n        if (!pending) {\r\n            // 刷新队列 多个属性刷新 其实执行的只是第一次 合并刷新了\r\n            // setTimeout(flushSchedulerQueue, 0);\r\n            // 将刷新队列的执行和用户回调的执行都放到一个微任务中\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 刷新调度队列 且清理当前的标识 has pending 等都重置\r\n * 先执行第一批的watcher，如果刷新过程中有新的watcher产生，再次加入队列即可\r\n */\r\nfunction flushSchedulerQueue() {\r\n    // 需要执行的回调函数的栈也就是 在这之后 需要刷新的 .run()\r\n    const flushQueue = [...queue];\r\n    queue = [];// 清空queue和has， pending改为false\r\n    has = {};\r\n    pending = false;\r\n    // 刷新视图 如果在刷新过程中 还有新的watcher 会重新放到queueWatcher中\r\n    flushQueue.forEach((watcher) => watcher.run());\r\n}\r\n// 任务队列\r\nlet callbacks = [];\r\n// 是否等待任务刷新\r\nlet waiting = false;\r\n/**\r\n * 刷新异步回调函数队列\r\n */\r\nfunction flushCallbacks() {\r\n    // 同步函数执行完之后，使用这个函数去异步的调用回调函数队列中的函数\r\n    // cbs\r\n    const cbs = [...callbacks];\r\n    callbacks = [];\r\n    waiting = false;\r\n    cbs.forEach((cb) => cb());\r\n}\r\n/**\r\n * 优雅降级  Promise -> MutationObserve -> setImmediate -> setTimeout(需要开线程 开销最大)\r\n */\r\nlet timerFunc = null;\r\nif (Promise) {\r\n    timerFunc = () => Promise.resolve().then(flushCallbacks);\r\n} else if (MutationObserver) {\r\n    // 创建并返回一个新的 MutationObserver 它会在指定的DOM发生变化时被调用（异步执行callback）。\r\n    const observer = new MutationObserver(flushCallbacks);\r\n    // TODO 创建文本节点的API 应该封装 为了方便跨平台\r\n    const textNode = document.createTextNode(1);\r\n    //   console.log(\"observer-----------------\");\r\n    // 监控文本值的变化\r\n    observer.observe(textNode, {\r\n        characterData: true,\r\n    });\r\n    timerFunc = () => (textNode.textContent = 2);\r\n} else if (setImmediate) {\r\n    // IE平台\r\n    timerFunc = () => setImmediate(flushCallbacks);\r\n} else {\r\n    timerFunc = () => setTimeout(flushCallbacks, 0);\r\n}\r\n/**\r\n * 异步批处理\r\n * 是先执行内部的回调 还是用户的？ 用个队列 排序\r\n * @param {Function} cb 回调函数\r\n */\r\nexport function nextTick(cb) {\r\n    // 使用队列维护nextTick中的callback方法\r\n    callbacks.push(cb);\r\n    if (!waiting) {\r\n        // setTimeout(flushCallbacks, 0); // 刷新\r\n        // 使用vue的原理 优雅降级\r\n        timerFunc();\r\n        waiting = true;\r\n    }\r\n}\r\n\r\nexport default Watcher;","import { isFunction } from './utils/index'\r\nimport { observer } from './observer/index'\r\nimport Watcher, {nextTick} from './observer/watcher';\r\nimport Dep from './observer/dep';\r\n// 代理函数 vm_data 代理data\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n      enumerable: true,\r\n      get() {\r\n        return vm[target][key];\r\n      },\r\n      set(newVal) {\r\n        vm[target][key] = newVal;\r\n      },\r\n    });\r\n  }\r\nfunction initState(vm) {\r\n    // 初始化data \r\n    const opts = vm.$options; // 获取所有选项\r\n    if (opts.data) {\r\n        // data 初始化\r\n        initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    // 初始化computed\r\n    initComputed(vm)\r\n  }\r\n  // 初始化watch，标记为自己 user\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n  \r\n}\r\nfunction initWatch(vm) {\r\n  // 初始化watch\r\n  // watch的写法：\r\n  // 1. firstName(){} 函数, firstName变化之后，执行改回调函数\r\n  //2. firstName:[fn1, fn2],数组形式\r\n  // 3. $watch(函数/字符串， 回调函数)\r\n  const watch = vm.$options.watch; // 获取watch函数配置项\r\n  for (let key in watch) {\r\n    // 遍历键名，例如 fisrtName, 字符串\r\n    const handler = watch[key]; // 对应的回调函数s;\r\n    if (Array.isArray(handler)) {\r\n      for (let i = 0; i < handler.length; i++) {\r\n        creatWatch(vm, key, handler[i])\r\n      }\r\n    } else {\r\n      creatWatch(vm, key, handler)\r\n    }\r\n  }\r\n}\r\n\r\nfunction creatWatch(vm, exprOrFn, handler) {\r\n  if (typeof handler === \"string\") {\r\n    handler = vm[handler];\r\n  }\r\n  return vm.$watch(exprOrFn, handler);\r\n}\r\nfunction initData(vm) {\r\n    // 函数 或者是对象； vue3为函数\r\n    // 判断函数是否为函数或者对象\r\n    let data = vm.$options.data;\r\n    if (isFunction(data)) data = data.call(vm); //函数执行该函数，改变this指向\r\n    Object.defineProperty(vm, \"_data\", {\r\n        configurable: true,\r\n        // enumerable: false,\r\n        writable: true,\r\n        value: data,\r\n      });\r\n    // 数据劫持实现\r\n    observer(data); // 劫持观测数据， 对象属性劫持\r\n\r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key); // vm.name -> vm._data.name\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed;\r\n  const watchers = (vm._computedWatchers = {}) //把watchers存到其对应的vm实例身上，之后通过vm获取到改watcher\r\n  for (const key in computed) {\r\n    // function -> get\r\n    // object -> {get(){}, set(newVal){}}\r\n    // userDef可能是一个函数，也可能是一个对象传入set和get方法\r\n    let userDef = computed[key];\r\n    let setter;\r\n    debugger;\r\n    const getter = isFunction(userDef) ? userDef : ((setter = userDef.set), getter);\r\n    watchers[key] = new Watcher(vm, getter, { lazy: true }); //lazy true刚开始不执行get(), 讲watcher和key对应起来\r\n    // 劫持计算属性\r\n    defineComputed(vm, key, setter);\r\n\r\n  }\r\n}\r\n\r\nfunction defineComputed(target, key, setter) {\r\n  Object.defineProperty(target, key, {\r\n    // vm.key -> vm.get key this -> vm\r\n    get: createComputedGetter(key),\r\n    set: setter,\r\n  });\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n  // 控制get的执行次数，不能\r\n  // 返回一个函数\r\n  return function lazyGetter() {\r\n      // 得到对应属性的watcher\r\n    const watcher = this._computedWatchers[key]; //通过this拿到对应的watcher实例\r\n    if (watcher.dirty) {\r\n      // 执行用户传入的getter并获得结果\r\n      // 执行用户传入的函数\r\n      watcher.evaluate(); //记录getter的返回值，改变dirty :false,之后再取值就不会重复取值了\r\n    }\r\n    if (Dep.target) {\r\n      // 此时计算属性出栈之后，还有渲染watcher\r\n      //收集上层watcher\r\n      watcher.depend()\r\n    }\r\n    return watcher.value; //之后再调用get 返回watcher.value\r\n  }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick;\r\n  Vue.prototype.$nextTick = nextTick;\r\n  /**\r\n   * 实现 $watch\r\n   */\r\n  // watch的底层实现 全是通过$watch\r\n  Object.defineProperty(Vue.prototype, \"$watch\", {\r\n    /**\r\n     * watch的实现 也是使用观察者模式\r\n     * @param {Function|string} exprOrFn 监控的值\r\n     * @param {*} callback 回调函数\r\n     * @param {*} options 选项\r\n     */\r\n    value(exprOrFn, callback, options = {}) {\r\n      // console.log(exprOrFn, callback);\r\n      // 创建观察者 user属性 表名这是用户自己定义的watch\r\n      // 侦听的属性值发生改变 直接执行callback即可\r\n      new Watcher(this, exprOrFn, { user: true, ...options }, callback);\r\n    },\r\n  });\r\n}\r\nexport {\r\n    initState\r\n}","// 元素类型\r\nconst ELEMENT_TYPE = 1;\r\n// 文本类型\r\nconst TEXT_TYPE = 3;\r\n\r\nexport{\r\n  ELEMENT_TYPE,\r\n  TEXT_TYPE\r\n}","import { ELEMENT_TYPE, TEXT_TYPE } from \"./type\";\r\n/**\r\n * 匹配标签名\r\n * 开头不能包含特殊字符和数字\r\n * 第二个字符开始 可以是任意字符了 / \\ 空白符 . 都可以\r\n *  div _div _ab88 a_9.//a\r\n *\r\n */\r\nconst ncname = \"[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\"; //开始必须是字母或者下划线  ， \\放到引号里里面也就是字符串的形式，第一个\\将第二个\\转换成正则表达式中的转义字符，第二个\\再去转豁免的所以是两个\\\\\r\n\r\n/**\r\n * 捕获 标签名\r\n * 注意 ?: 只匹配不捕获\r\n * 这里的匹配标签名 后面还有:的这种 是带命名空间的标签 比如 a:b\r\n */\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n\r\n// ((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\n/**\r\n * 匹配到的分组是一个 标签名 <div\r\n */\r\n// ^<((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n\r\n\r\n/**\r\n * 匹配标签名结束 <\\/div> 因为 /具有特殊含义\r\n */\r\n// ^<\\\\/((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)[^>]*>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// `^<\\\\/${qnameCapture}[^>]*>`\r\n\r\n\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //在这里一个 \\就行 因为使用了 //来表示正则表达式\r\n/*\r\n属性值前可以有空白： \\s*, *表示前面的表达式 0次或者多次\r\n第一个分组：([^\\s\"'<>\\/=]+)， 组1中不能有空白 单引号 双引号， <> / = 这些字符\r\n中间是 = 左右可以有空白字符 组2（=）左右 \\s*表示空白\r\n等号右边可以是： 1. 双引号，但是双引号中不能再有双引号 ?:\"([^\"]*)\"+, +表示匹配前一个字符一次或者多次\r\n第一个分组为key 第二个分组为 = \r\n*/\r\n\r\n\r\n/**\r\n * 匹配标签结束\r\n * 标签可能自闭合 <div></div> <br/>  />\r\n */\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n\r\n/**\r\n * 匹配 双花括号语法 {{}} 匹配到的是就是双花括号的 变量\r\n */\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// 模板解析幻术\r\nfunction parseHTML(html) {\r\n  /**\r\n   * 最终需要转换为一颗抽象语法树 ast abstract syntax tree\r\n   * 可以借助栈思想\r\n   * 栈中的最后一个标签元素 就是当前正在匹配的元素的父元素\r\n   * @type {Array<{tag:string,type:number,children:Array}>}\r\n   */\r\n  const stack = [];\r\n  // 栈帧 指向最后一个元素\r\n  let curParent = null;\r\n  let root = null; // 根元素\r\n\r\n\r\n  function createASTElement(tag, attrs) {\r\n    // 根据tag和属性值 返回 ele\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  function start(tag, attrs, isSelfClose) {\r\n    // console.log(tag, attrs);\r\n    // 当前节点\r\n    const node = createASTElement(tag, attrs);\r\n    // 根节点\r\n    root = root ?? node;\r\n    // 更新当前节点的父节点 更新父元素的子元素节点， \r\n    // 父元素的子元素节点\r\n    curParent && ((node.parent = curParent), curParent.children.push(node));\r\n    // TODO 是自闭合标签 不需要入栈的\r\n    if (isSelfClose) return;\r\n    // 新节点入栈\r\n    stack.push(node);\r\n    // 更新当前指向的最前面的父节点\r\n    curParent = node;\r\n    // console.log(node, root);\r\n  }\r\n\r\n  function chars(text) {\r\n    // 去除空字符串\r\n    text = text.replace(/^\\s+|\\s+$/gm, \"\");\r\n    // console.log(text);\r\n    // 文本节点 插入到父元素的孩子中\r\n    text &&\r\n      curParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: curParent,\r\n      });\r\n  }\r\n\r\n  function end(tag) {\r\n    // console.log(tag);\r\n    // 弹出最后一个栈元素 并更新指向的父节点\r\n    const node = stack.pop();\r\n    // TODO 可以根据tag和node.tag 校验标签是否合法等 也需要考虑自闭合标签\r\n    if (tag !== node.tag) {\r\n      // console.log(\"标签不合法---------\",tag, node);\r\n      // 校验标签是否合法\r\n    }\r\n    curParent = stack[stack.length - 1];\r\n  }\r\n\r\n  function parseStartTag() {\r\n    // 匹配标签起始位置\r\n    const start = html.match(startTagOpen); // mathch返回字符串匹配正则返回的结果\r\n    if (start) {\r\n      // 是开始标签\r\n      const match = {\r\n        // 标签名\r\n        tagName: start[1],\r\n        // 属性\r\n        attrs: [],\r\n        // 是否是自闭合标签\r\n        isSelfClose: false,\r\n      };\r\n      advance(start[0].length);\r\n      // 不是标签结束位置 一直匹配\r\n      let attr, end;\r\n      while (\r\n        // 如果不是开始标签 的结束\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        // 去除属性\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          // 属性名\r\n          name: attr[1],\r\n          // 属性值 key=\"value\" key='value' key=value\r\n          // key  对于只有key的这种，我们给默认值true\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      // 去除标签的右闭合箭头  <div> 中的 > 或者自闭合标签 <br/> />\r\n      if (end) {\r\n        advance(end[0].length);\r\n        // 自闭合\r\n        if (end[0].endsWith(\"/>\")) match.isSelfClose = true;\r\n      }\r\n      // console.log(match);\r\n      return match;\r\n    }\r\n    // 不是开始标签\r\n    return false;\r\n  }\r\n\r\n  function advance(start) {\r\n    // 去除字符\r\n    html = html.substring(start);\r\n  }\r\n  // vue2中 html 开头肯定是 <  <div>hello</div>\r\n  while (html) {\r\n    // 如果indexOf中索引的值是 0 则说明是个开始标签 或者 结束标签\r\n    // > 0 是文本的结束位置  </div>\r\n    let textEnd = html.indexOf(\"<\");\r\n    if (textEnd === 0) {\r\n      // 解析开始标签 开始标签及其标签内的属性等\r\n      const startTagMatch = parseStartTag(); // 匹配结果\r\n      if (startTagMatch) {\r\n        // console.log(startTagMatch);\r\n        start(\r\n          startTagMatch.tagName,\r\n          startTagMatch.attrs,\r\n          startTagMatch.isSelfClose\r\n        );\r\n        continue;\r\n      }\r\n      // 去除结束标签 来到这里 肯定是 </xxx>\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        // console.log(endTagMatch, html);\r\n        end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 文本内容  adb<h2></h2>\r\n    if (textEnd > 0) {\r\n      // 获取文本内容\r\n      const text = html.substring(0, textEnd);\r\n      if (text) {\r\n        advance(text.length); // 解析到的文本\r\n        chars(text);\r\n      }\r\n      // console.log(html);\r\n    }\r\n  }\r\n  // console.log(root);\r\n  // 返回 生成的vNode树 ast\r\n  return root;\r\n}\r\n\r\nexport { parseHTML };\r\n","import { parseHTML, defaultTagRE } from \"./parser\";\r\nimport { TEXT_TYPE, ELEMENT_TYPE } from \"./type\";\r\n/**\r\n * 生成 render函数\r\n * @param {*} template 模板\r\n * @returns {Function}\r\n */\r\nexport function compileToFunction(template) {\r\n  // console.log(\"compileToFunction-------------->\" + template + \"---------\");\r\n  // 1. template 转 ast\r\n  const ast = parseHTML(template);\r\n\r\n  // 2. 生成render方法（该方法的执行结果是返回虚拟dom）\r\n  // TODO 三个方法 _v文本节点 _s把变量转为字符串 _c元素节点\r\n  // 2.1 生成render函数的返回代码块字符串形式\r\n  const renderCodeBlock = codeGenerator(ast);\r\n  // 2.2 生成render函数 new Function\r\n  // 生成的代码中，取变量的值的时候，并没有去当前组件实例的上下文中取值\r\n  // 而是直接 name age 所以这里绑定上下文（组件实例） name -> vm.name -> vm._data.name\r\n  // this -> render.call(thisArg) with{}语法扩展作用域链，执行函数的时候，获取到this，之后执行的函数，会在作用域链上去寻找对应的变量；\r\n  const render = new Function(`with(this){\\n return ${renderCodeBlock}}`);\r\n  // console.log(render);\r\n  return render;\r\n}\r\n\r\n/**\r\n * 根据ast生成代码\r\n * @param {{tag:string,children:Array,type:number,text:string,attrs:Array}} \r\n * _c('div',{\"id\":\"app\"},_c('div',{style:{\"color\":\" red\"}},_v(_s(name)+\" hello\")),_c('span',null,_v(_s(age))))\r\n */\r\nfunction codeGenerator(ast) {\r\n  const children = generateChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? generateProps(ast.attrs) : \"null\"\r\n  }${\r\n    ast.children.length ? `,${children}` : \"\"\r\n  })`;\r\n  return code;\r\n}\r\n\r\n\r\n/**\r\n * 生成属性对象 {name:\"\",id:\"app\"}\r\n * @param {Array<{name:string|symbol,value:any}>} attrs\r\n */\r\nfunction generateProps(attrs) {\r\n  let str = \"\"; // 返回值是一个字符串\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // style:\"color:red;background-color:{{backgroundColor}}\"\r\n      // style:{color:\"red\",\"background-color\":\"{{backgroundColor}}\"}\r\n      const style = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        if (!item.trim()) return; // 空白 ，color:red\r\n        let [key, value] = item.split(\":\");\r\n        style[key] = value;\r\n      });\r\n      str += `${attr.name}:${JSON.stringify(style)},`;\r\n    } else str += `\"${attr.name}\":${JSON.stringify(attr.value)},`; //把value转成字符串\r\n  }\r\n  return `{${str.slice(0, -1)}}`; //去掉多余的 逗号\r\n}\r\n\r\n\r\n/**\r\n * 生成节点的子节点数组对象\r\n * @param {*} children\r\n */\r\n\r\n\r\nfunction generateChildren(children) {\r\n  if (children) {\r\n    return children.map((child) => generateChild(child)).join(\",\");\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * 根据节点生成子字符串形式\r\n * @param {*} node\r\n * @returns\r\n */\r\nfunction generateChild(node) {\r\n  switch (node.type) {\r\n    case ELEMENT_TYPE:\r\n      // 元素节点\r\n      // console.log(codeGenerator(node))\r\n      return codeGenerator(node); // 节点类型， 递归调用codeGenerator(node)\r\n    case TEXT_TYPE:\r\n      // console.log(node.text)\r\n      // 文本节点\r\n      const text = node.text;\r\n      if (!defaultTagRE.test(text)) {\r\n        // 纯文本节点 没有 {{xx}}\r\n        return `_v(${JSON.stringify(text)})`;\r\n      }\r\n      // 之后匹配的是 {{name}}这种形式\r\n      const tokens = [];\r\n      // 匹配结果\r\n      let match = null;\r\n      defaultTagRE.lastIndex = 0; //exec 跟全局匹配标志一块使用的时候，需要重置 lastIndex 0 \r\n      // 上一次匹配结果的起始索引位置\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        // console.log(match)\r\n        // 当前匹配的到的起始位置\r\n        let index = match.index;\r\n        if (index > lastIndex)\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index))); // 两个匹配位置之间的内容 {{}} name {{}}\r\n        tokens.push(`_s(${match[1].trim()})`); // 去除空格\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      // {{age}}--- 最后一次匹配后还有内容\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      // console.log(tokens);\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","// 虚拟节点相关的方法\r\n// h函数\r\nfunction vnode(vm, tag, key, props, children, text, componentOptions) {\r\n    // 创建一个虚拟的dom,返回值是一个js对象,增加自定义属性\r\n    // * 虚拟dom是和ast不一样的 -> ast是语法层面的转换，他描述的是dom本身（可以描述 js css html等等）\r\n    return {\r\n        vm,\r\n        tag,\r\n        key, // diff算法，每一个虚拟dom应该有一个独一无二的key值\r\n        text,\r\n        props, // data\r\n        componentOptions,\r\n        children\r\n    }\r\n    \r\n}\r\nfunction createElementVNode(vm, tag, data, ...children) {\r\n    // 返回的是一个节点\r\n    const key = data?.key;\r\n    key && delete data.key;\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n// _v创建文本节点\r\nfunction createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text, undefined)\r\n}\r\n\r\nexport {\r\n    createElementVNode,\r\n    createTextVNode\r\n}","function patch(oldVNode, vnode) {\r\n    if (!oldVNode) return createEle(vnode);\r\n    const isRealElement = oldVNode.nodeType; //真实节点身上会有一个nodeType属性,如果是虚拟dom，没有该属性\r\n    if (isRealElement) {\r\n        const elm = oldVNode\r\n        const parentElm = elm.parentNode;\r\n        // console.log(parentElm)\r\n        const newEle = createEle(vnode);\r\n        // 插入新dom 移除父节点上的老dom节点\r\n        insertBefore(parentElm, newEle, elm.nextSibling);//下一个节点 nextSibling, 先插入 然后再移除旧的节点\r\n        removeChild(parentElm, elm);\r\n        // console.log(newEle)\r\n        return newEle; // 返回新的elm\r\n    } else {\r\n        // diff 更新节点\r\n    }\r\n}\r\n\r\nfunction createEle(vnode) {\r\n    //vnode一个js对象\r\n    //根据这个对象 然后创建真实的dom节点\r\n    const {\r\n        tag,\r\n        props,\r\n        children,\r\n        text\r\n    } = vnode\r\n    if (typeof tag === 'string') {\r\n        vnode.el = createElement(tag);\r\n        // 更新属性值\r\n        patchProps(vnode.el, {}, props);\r\n        children.forEach((child) => {\r\n            // 如果孩子是组件 会实例化组件 并且插入到父组件内部子节点的最后\r\n            appendChild(vnode.el, createEle(child));\r\n        });\r\n\r\n    } else if (typeof tag === \"object\") {\r\n        // \r\n    } else {\r\n        vnode.el = createTextNode(text) // 创建真实的文本节点\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction createTextNode(tag, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n        case \"browser\":\r\n            return document.createTextNode(tag);\r\n    }\r\n}\r\n\r\nfunction createElement(tag, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n        case \"browser\":\r\n            return document.createElement(tag); // 原生创建节点的方法\r\n    }\r\n}\r\n\r\nfunction patchProps(el, oldProps, props) {\r\n    // 节点，原来的属性值，新的属性值\r\n    const oldStyle = oldProps?.style || {}; // 旧的属性值存在 且 style不为空\r\n    const newStyle = props ?.style || {};\r\n\r\n    // 样式移除\r\n    for (let key in oldStyle) {\r\n        if (!newStyle[key]) {\r\n            el.style[key] = \"\";\r\n        }\r\n    }\r\n\r\n    for (const key in oldProps) {\r\n        if (!props[key]) {\r\n            removeAttribute(el, key);\r\n        }\r\n    }\r\n\r\n    // 属性存在 则覆盖\r\n    for (const key in props) {\r\n        if (key === \"style\") {\r\n            Object.keys(props[key]).forEach((k) => (el.style[k] = props[\"style\"][k]));\r\n        } else {\r\n            setAttribute(el, key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setAttribute(el, key, value, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n        case \"browser\":\r\n            el.setAttribute(key, value);\r\n            break;\r\n    }\r\n}\r\n\r\nfunction appendChild(parent, child, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n      case \"browser\":\r\n        parent.appendChild(child);\r\n        break;\r\n    }\r\n}\r\n  \r\nfunction insertBefore(parent, child, prevChild, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n      case \"browser\":\r\n        // document.insertBefore\r\n        parent.insertBefore(child, prevChild);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  function removeChild(parent, child, type = \"browser\") {\r\n    switch (type.toLowerCase()) {\r\n      case \"browser\":\r\n        parent.removeChild(child);\r\n        break;\r\n    }\r\n  }\r\n  export {\r\n    patch,\r\n    createEle,\r\n    patchProps,\r\n    createElement,\r\n    createTextNode,\r\n    appendChild,\r\n    setAttribute,\r\n    insertBefore,\r\n    removeChild\r\n  };\r\n  ","import {\r\n    createElementVNode,\r\n    createTextVNode\r\n} from \"./vdom/index\";\r\nimport {\r\n    patch\r\n} from \"./vdom/patch\";\r\nimport Watcher from \"./observer/watcher\";\r\nexport function initLifcycle(Vue) {\r\n    Object.defineProperties(Vue.prototype, {\r\n        _render: {\r\n            value: function _render() {\r\n                const vm = this;\r\n                return vm.$options.render.call(vm); // 执行 属性上的render函数，该边this的指向\r\n                // _c返回一个虚拟节点\r\n            }\r\n        },\r\n        _c: {\r\n            // _c(\"div\",{name:'zs'},...children) 元素 虚拟dom\r\n            value: function _c() {\r\n                return createElementVNode(this, ...arguments)\r\n            }\r\n        },\r\n        _s: {\r\n            // 变量转成字符串\r\n            // 对于不是对象的字符串，没必要再次转字符串了，不然会多出引号 zs -> \\\"zs\\\"\r\n            value: function _s(value) {\r\n                return typeof value === \"object\" ? JSON.stringify(value) : value;\r\n            }\r\n        },\r\n        _v: {\r\n            // 文本的虚拟dom\r\n            value: function _v() {\r\n                return createTextVNode(this, ...arguments)\r\n            }\r\n        },\r\n        _update: {\r\n            value: function _update(vnode) {\r\n                const vm = this;\r\n                // 挂载的容器 \r\n                const el = vm.$el;\r\n                const preVnode = vm._vnode;\r\n                // 记录每次产生 vnode,每次render一次就会产生一个新的 vnode\r\n                vm._vnode = vnode;\r\n                if (preVnode) {\r\n                    vm.$el = patch(preVnode, vnode)\r\n                } else {\r\n                    // 初始 渲染\r\n                    vm.$el = patch(el, vnode)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\nexport function mountComponent(vm, container) {\r\n    // 组件挂载\r\n    // 1.render创建虚拟dom，\r\n    // 2. 根绝虚拟dom产生真实dom\r\n    //3. 挂载el到元素中\r\n    // vm._render(); //vm.$options.render()\r\n    // vm._update(); // 虚拟dom -> 真实dom\r\n\r\n    // vm.$el = container; //记录挂载的容器\r\n    Object.defineProperty(vm, \"$el\", {\r\n        value: container,\r\n        writable: true,\r\n    });\r\n    // 这里把渲染逻辑封装到watcher中\r\n    // 该函数调用一次渲染一次\r\n    const updateComponent = () => {\r\n        // 1.调用render 产生虚拟节点 vNode\r\n        const vNodes = vm._render();\r\n        // 2. 根据虚拟dom 产生真实dom\r\n        vm._update(vNodes);\r\n    };\r\n    new Watcher(vm, updateComponent, true); //每执行一次这个函数， 再构造函数中， updateComponent就执行一次\r\n    // 3. 挂载到container上 _update中实现\r\n\r\n}","// 定义合并策略\r\n// 策略模式\r\nexport const strategy = {};\r\n// 生命周期\r\nconst LIFE_CYCLE = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"update\",\r\n];\r\nLIFE_CYCLE.forEach((hook) => {\r\n    // 策略是一个对象，key为声明周期的钩子，分别定义为不同的函数\r\n    strategy[hook] = function (s1, s2) {\r\n        //  s1 s2为 source1[key], source2[key]\r\n        if (s2) {\r\n            // minin混入的有这个key\r\n            if (s1) {\r\n                // 原来也有,现在也有\r\n                // 合并选项\r\n                // return s1.concat(s2);\r\n                return [...s1, s2];\r\n            } else {\r\n                // 全局options没有 用户传递的有 变成数组\r\n                return [s2];\r\n            }\r\n        } else {\r\n            return s1;\r\n        }\r\n    };\r\n});\r\n\r\n// 组件的合并策略\r\nstrategy.components = function (parentVal, childVal) {\r\n    // TODO 这里这种做法不一定很好 该条件是不是应该有还应该考究 有了该条件 全局的组件定义的位置不同 可能最后的结果不同\r\n    // 已经和全局组件对象创建关系了，则不需要再次建立关系 直接返回\r\n    // if (Object.getPrototypeOf(parentVal) === Vue.options.components)\r\n    //   return parentVal;\r\n    // 通过父亲 创建一个对象 原型上有父亲的所有属性和方法\r\n    const res = Object.create(parentVal); // {}.__proto__ = parentVal\r\n    if (childVal) {\r\n        for (const key in childVal) {\r\n            // 拿到所有的孩子的属性和方法\r\n            res[key] = childVal[key];\r\n        }\r\n    }\r\n    console.log(res);\r\n    return res;\r\n};","import {\r\n    strategy\r\n} from \"./strategy\";\r\nexport function mergeOptions(...options) {\r\n    function mergeField(key) {\r\n        // 需要用到的处理函数\r\n        if (strategy[key]) {\r\n            opts[key] = strategy[key](source1[key], source2[key]);\r\n        } else {\r\n            opts[key] = source2[key] === void 0 ? source1[key] : source2[key];\r\n        }\r\n    }\r\n    // \r\n    const opts = {};\r\n    const [source1, source2] = options;\r\n    for (let key in source1) {\r\n        // 遍历key属性\r\n        mergeField(key);\r\n    }\r\n\r\n    for (let key in source2) {\r\n        // 遍历孩子的key\r\n        // source1没有的key 再去处理 source2中的key\r\n        if (!source1.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n\r\n    if (options.length > 2) {\r\n        options.splice(0, 2)\r\n        return mergeOptions(opts, ...options);\r\n    }\r\n    return opts;\r\n}","// 调用声明周期的不同阶段定义的函数\r\n\r\nexport function callhooks(vm, hook) {\r\n    const handles = vm.$options[hook];\r\n    if (handles) {\r\n        handles.forEach(handle => handle.call(vm)); // 声明周期上的钩子函数的this都是指向当前的实例上\r\n    }\r\n}","import {\r\n    initState\r\n} from \"./initState\";\r\nimport {\r\n    compileToFunction\r\n} from \"./compiler/index\";\r\nimport {\r\n    mountComponent\r\n} from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils/merge\";\r\nimport { callhooks } from \"./hooks/life-hooks\";\r\nexport function initMixin(Vue) {\r\n    // 初始化\r\n    Vue.prototype._init = function _init(options) {\r\n        // this , $开头 自身属性\r\n        const vm = this;\r\n        // 合并 Vue.options 和 传入的配置项\r\n        // TODO 目前还只是可以合并生命周期和普通属性等，对于 data 这种选项还需要特殊的合并处理\r\n        // 这种使用this获取其构造函数上的静态属性options，因为构造函数不一定直接是 Vue，也可以是Vue的子类（组件\r\n        vm.$options = mergeOptions(this.constructor.options, options); //用户选项挂载实例身上\r\n\r\n        // 初始化之前调用 beforeCreated\r\n        callhooks(vm, \"beforeCreate\")\r\n        // 初始化状态\r\n        // TODO computed methods watcher .... 计算属性 watch\r\n        initState(vm);\r\n        // 之后 ceated\r\n        callhooks(vm, \"created\")\r\n        // el 实现数据挂载\r\n        if (options.el) {\r\n            // 有el配置\r\n            vm.$mount(options.el);\r\n        }\r\n    };\r\n\r\n\r\n    // 手动调用\r\n    Vue.prototype.$mount = function $mount(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        let template;\r\n        // 先看是否有render函数\r\n        if (!ops.render) {\r\n            // 没有模板， 有el\r\n            if (!ops.template && el) {\r\n                // 没有template凡是写了el直接用el作为模板\r\n                template = el.outerHTML;\r\n\r\n            } else {\r\n                template = ops.template;\r\n            }\r\n        }\r\n\r\n        if (template) {\r\n            // 此时再去做模板编译\r\n            // console.log(template);\r\n            if (/^[\\.#a-zA-Z_]/i.test(template)) {\r\n                // 模板标签\r\n                template = document.querySelector(template).innerHTML;\r\n            }\r\n            // TODO 去除开头和结尾的空白符 m是忽略换行 进行多行匹配\r\n            // template = template.trim();\r\n            template = template.replace(/^\\s+|\\s+$/gm, \"\");\r\n            const render = compileToFunction(template);\r\n            ops.render = render;\r\n        }\r\n        // 组件挂载\r\n        mountComponent(vm, el); //vm挂载到el上\r\n    }\r\n\r\n}\r\n/**\r\n * script 标签引用的是vue.global.js 这个编译过程是在浏览器运行的\r\n * runtime是不包含模板编译的，整个编译打包的时候是通过loader来转义.vue文件的\r\n * 用runtime的时候 不能使用模板template（可以使用.vue，loader处理就行了）\r\n */","import { mergeOptions } from \"./utils/merge\";\r\nexport function initGlobalStaticAPI(Vue) {\r\n    Vue.options = {}; // 全局的配置\r\n    //混入 mixin\r\n    Vue.mixin = function mixin(mixin) {\r\n        // 用户的选项和全局的options进行合并\r\n        this.options = mergeOptions(Vue.options, mixin);//mixin为混入的内容\r\n        return this;\r\n    }\r\n}","import { initMixin } from './init'\r\nimport { initLifcycle } from './lifecycle'\r\nimport { initGlobalStaticAPI } from './global-static-api';\r\nimport {initStateMixin} from \"./initState\"\r\n/**\r\n * Vue构造函数\r\n * @param {*} options 用户选项\r\n */\r\n\r\nfunction Vue(options) {\r\n    // 初始化\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 扩展_init方法\r\ninitLifcycle(Vue);\r\n// 静态方法\r\ninitGlobalStaticAPI(Vue);\r\ninitStateMixin(Vue)\r\nexport default Vue; "],"names":["isFunction","source","isObject","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","inserted","ob","__ob__","args","slice","console","log","observeArray","res","call","id","Dep","subs","target","addDep","watcher","push","update","watcherStack","pushWatcherTarget","popWatcherTarget","pop","length","Observer","data","defineProperty","value","enumerable","isArray","setPrototypeOf","arrayProto","walk","keys","key","defineReactive","item","observer","obj","dep","get","depend","set","newVal","notify","Watcher","vm","exprOrFn","options","callback","renderWatcher","getter","user","deps","depsId","Set","lazy","dirty","val","has","add","addSub","queueWatcher","i","queue","pending","nextTick","flushSchedulerQueue","flushQueue","run","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","proxy","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","creatWatch","$watch","configurable","writable","watchers","_computedWatchers","userDef","setter","defineComputed","createComputedGetter","lazyGetter","evaluate","initStateMixin","Vue","$nextTick","_objectSpread","ELEMENT_TYPE","TEXT_TYPE","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","stack","curParent","root","createASTElement","tag","attrs","type","children","parent","start","isSelfClose","node","chars","text","replace","end","parseStartTag","match","tagName","advance","attr","name","endsWith","substring","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","renderCodeBlock","codeGenerator","render","Function","generateChildren","code","generateProps","str","style","split","trim","JSON","stringify","map","child","generateChild","join","test","tokens","lastIndex","exec","index","vnode","props","componentOptions","createElementVNode","createTextVNode","undefined","patch","oldVNode","createEle","isRealElement","nodeType","elm","parentElm","parentNode","newEle","insertBefore","nextSibling","removeChild","el","createElement","patchProps","appendChild","toLowerCase","oldProps","oldStyle","newStyle","removeAttribute","k","setAttribute","prevChild","initLifcycle","defineProperties","_render","_c","arguments","_s","_v","_update","$el","preVnode","_vnode","mountComponent","container","updateComponent","vNodes","strategy","LIFE_CYCLE","hook","s1","s2","components","parentVal","childVal","mergeOptions","mergeField","source1","source2","hasOwnProperty","splice","callhooks","handles","handle","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","innerHTML","initGlobalStaticAPI","mixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACQ,SAASA,UAAT,CAAoBC,MAApB,EAA4B;IAChC,OAAO,OAAOA,MAAP,KAAkB,UAAzB,CAAA;EACD,CAAA;EAEM,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACD,MAAD,EAAY;EAClC,EAAA,OAAOA,MAAM,IAAI,IAAV,IAAkB,OAAOA,CAAAA,MAAP,MAAkB,QAA3C,CAAA;EACD,CAFM;;ECTT,IAAIE,aAAa,GAAGC,KAAK,CAACC,SAA1B;;EACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,aAAd,CAApB;EAEA;;EACA,IAAMM,OAAO,GAAG,CACZ,MADY,EAEZ,KAFY,EAGZ,SAHY,EAIZ,OAJY,EAKZ,SALY,EAMZ,MANY,EAOZ,QAPY,CAAhB,CAAA;EAUAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;EACtBL,EAAAA,aAAa,CAACK,MAAD,CAAb,GAAwB,YAAmB;EAAA,IAAA,IAAA,qBAAA,CAAA;;EACvC,IAAA,IAAIC,QAAJ,CAAA;EACA,IAAA,IAAMC,EAAE,GAAG,IAAKC,CAAAA,MAAhB,CAFuC;;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAANA,IAAM,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;;EAGvC,IAAA,QAAQJ,MAAR;EACI,MAAA,KAAK,MAAL,CAAA;EACA,MAAA,KAAK,SAAL;EAAgB;EACd;EACAC,QAAAA,QAAQ,GAAGG,IAAX,CAAA;EACA,QAAA,MAAA;;EACF,MAAA,KAAK,QAAL;EAAe;UACbH,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAW,CAAX,CAAX,CADF;;EAEE,QAAA,MAAA;EARN,KAAA;;EAYAC,IAAAA,OAAO,CAACC,GAAR,CAAkBP,oBAAAA,CAAAA,MAAAA,CAAAA,MAAlB,oDAAgD,IAAhD,CAAA,CAAA;;EACA,IAAA,IAAIC,QAAJ,EAAc;EACV;QACAC,EAAE,CAACM,YAAH,CAAgBP,QAAhB,CAAA,CAAA;EACD,KAAA;;EACH,IAAA,IAAMQ,GAAG,GAAG,CAAAjB,qBAAAA,GAAAA,aAAa,CAACQ,MAAD,CAAb,EAAsBU,IAAtB,CAAA,KAAA,CAAA,qBAAA,EAAA,CAA2B,IAA3B,CAAA,CAAA,MAAA,CAAoCN,IAApC,CAAZ,CAAA,CAAA;;EACA,IAAA,OAAOK,GAAP,CAAA;KArBJ,CAAA;EAwBH,CAzBD,CAAA;;ECdA,IAAIE,IAAE,GAAG,CAAT,CAAA;;MACMC;IAEJ,SAAc,GAAA,GAAA;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,EADTD,IAAE,EACO,CAAA,CAAA;;EACZ;MACA,IAAKE,CAAAA,IAAL,GAAY,EAAZ,CAAA;EACD,GAAA;EACD;EACF;EACA;;;;;aACE,SAAS,MAAA,GAAA;EACP;EACA;EACA;EAEA;EACAD,MAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB,IAAlB,EANO;EAOR,KAAA;EACD;EACF;EACA;EACA;;;;EACE,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOC,OAAP,EAAgB;EACd,MAAA,IAAA,CAAKH,IAAL,CAAUI,IAAV,CAAeD,OAAf,EADc;EAGf,KAAA;EACD;EACF;EACA;;;;aACE,SAAS,MAAA,GAAA;EACP,MAAA,IAAA,CAAKH,IAAL,CAAUd,OAAV,CAAkB,UAACiB,OAAD,EAAA;UAAA,OAAaA,OAAO,CAACE,MAAR,EAAb,CAAA;SAAlB,CAAA,CAAA;EACD;;;;;EAKH,CAAA,EAAA,CAAA;;;EAnCMN,eAAAA,CAAAA,eAgCY;;EAIlB,IAAMO,YAAY,GAAG,EAArB,CAAA;EACA;EACA;EACA;EACA;;EACO,SAASC,iBAAT,CAA2BJ,OAA3B,EAAoC;IACzCG,YAAY,CAACF,IAAb,CAAkBD,OAAlB,CAAA,CAAA;IACAJ,GAAG,CAACE,MAAJ,GAAaE,OAAb,CAAA;EACD,CAAA;EACD;EACA;EACA;;EACO,SAASK,gBAAT,GAA4B;EACjCF,EAAAA,YAAY,CAACG,GAAb,EAAA,CAAA;IACAV,GAAG,CAACE,MAAJ,GAAaK,YAAY,CAACA,YAAY,CAACI,MAAb,GAAsB,CAAvB,CAAzB,CAAA;EACD;;MC/CKC;EACF,EAAA,SAAA,QAAA,CAAYC,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;EACd;EACA7B,IAAAA,MAAM,CAAC8B,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EAClCE,MAAAA,KAAK,EAAE,IAD2B;EACrB;QACbC,UAAU,EAAC,KAFuB;;OAAtC,CAAA,CAAA;;EAIA,IAAA,IAAInC,KAAK,CAACoC,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;EACrB;EACA;EACA7B,MAAAA,MAAM,CAACkC,cAAP,CAAsBL,IAAtB,EAA4BM,aAA5B,CAAA,CAAA;QACA,IAAKvB,CAAAA,YAAL,CAAkBiB,IAAlB,CAAA,CAAA;EACH,KALD,MAKO;QACH,IAAKO,CAAAA,IAAL,CAAUP,IAAV,CAAA,CAAA;EAEH,KAAA;EACJ,GAAA;;;;EACD,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EACP;EACA;QACA7B,MAAM,CAACqC,IAAP,CAAYR,IAAZ,EAAkB1B,OAAlB,CAA0B,UAAAmC,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACV,IAAD,EAAOS,GAAP,EAAYT,IAAI,CAACS,GAAD,CAAhB,CAAlB,CAAA;SAA7B,CAAA,CAAA;EACH,KAAA;;;EACD,IAAA,KAAA,EAAA,SAAA,YAAA,CAAaT,IAAb,EAAmB;EACfA,MAAAA,IAAI,CAAC1B,OAAL,CAAa,UAAAqC,IAAI,EAAA;UAAA,OAAIC,UAAQ,CAACD,IAAD,CAAZ,CAAA;SAAjB,CAAA,CAAA;EACH,KAAA;;;;EAGL,CAAA,EAAA,CAAA;EACA;EACA;EACA;EACA;EACA;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACO,SAASD,cAAT,CAAwBG,GAAxB,EAA6BJ,GAA7B,EAAkCP,KAAlC,EAAyC;EAC5C,EAAA,IAAIY,GAAG,GAAG,IAAI3B,GAAJ,EAAV,CAD4C;EAE5C;;EACAyB,EAAAA,UAAQ,CAACV,KAAD,CAAR,CAH4C;;EAK5C/B,EAAAA,MAAM,CAAC8B,cAAP,CAAsBY,GAAtB,EAA2BJ,GAA3B,EAAgC;EAC5BM,IAAAA,GAD4B,EACtB,SAAA,GAAA,GAAA;QACF,IAAI5B,GAAG,CAACE,MAAR,EAAgB;EACZ;EACAyB,QAAAA,GAAG,CAACE,MAAJ,EAAA,CAAA;EACH,OAAA;;EACD,MAAA,OAAOd,KAAP,CAAA;OANwB;MAQ5Be,GAR4B,EAAA,SAAA,GAAA,CAQxBC,MARwB,EAQhB;EACR;EACA,MAAA,IAAIA,MAAM,KAAKhB,KAAf,EAAsB,OAFd;;QAIRU,UAAQ,CAACM,MAAD,CAAR,CAAA;QACAhB,KAAK,GAAGgB,MAAR,CALQ;;EAORJ,MAAAA,GAAG,CAACK,MAAJ,EAAA,CAAA;EACH,KAAA;KAhBL,CAAA,CAAA;EAkBH,CAAA;EACM,SAASP,UAAT,CAAkBZ,IAAlB,EAAwB;EAC3B;EACA;EACA;EACA,EAAA,IAAI,CAAClC,QAAQ,CAACkC,IAAD,CAAb,EAAqB,OAAA;IACrB,IAAIA,IAAI,CAACtB,MAAL,YAAuBqB,QAA3B,EAAqC,OAAOC,IAAI,CAACtB,MAAZ,CALV;;EAQ3B,EAAA,OAAO,IAAIqB,QAAJ,CAAaC,IAAb,CAAP,CAAA;EAEH;;EC3ED,IAAId,EAAE,GAAG,CAAT,CAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;MACMkC;EACF;;EAEA;EACJ;EACA;EACA;EACA;EACA;EACA;EACI,EAAA,SAAA,OAAA,CAAYC,EAAZ,EAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,EARxCtC,EAAE,EAQsC,CAAA,CAAA;;MAEzC,IAAI,OAAOqC,OAAP,KAAmB,SAAvB,EAAkC,KAAKE,aAAL,GAAqB,IAArB,CAFO;EAGzC;;MACA,IAAKJ,CAAAA,EAAL,GAAUA,EAAV,CAAA;EACA,IAAA,IAAA,CAAKE,OAAL,GAAeA,OAAf,CALyC;;EAOzC,IAAA,IAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;EAC9B,MAAA,IAAA,CAAKI,MAAL,GAAc,YAAA;UAAA,OAAML,EAAE,CAACC,QAAD,CAAR,CAAA;EAAA,OAAd,CAD8B;EAG9B;EACA;EACA;;EACH,KAND,MAMO;EACH;QACA,IAAKI,CAAAA,MAAL,GAAcJ,QAAd,CAAA;EACH,KAhBwC;;;MAkBzC,IAAKK,CAAAA,IAAL,GAAYJ,OAAZ,KAAYA,IAAAA,IAAAA,OAAZ,uBAAYA,OAAO,CAAEI,IAArB,CAlByC;;EAoBzC,IAAA,IAAA,CAAKH,QAAL,GAAgBA,QAAhB,CApByC;;EAsBzC,IAAA,IAAA,CAAKI,IAAL,GAAY,EAAZ,CAtByC;;EAuBzC,IAAA,IAAA,CAAKC,MAAL,GAAc,IAAIC,GAAJ,EAAd,CAvByC;EAwBzC;;MACA,IAAKC,CAAAA,IAAL,GAAYR,OAAZ,KAAYA,IAAAA,IAAAA,OAAZ,uBAAYA,OAAO,CAAEQ,IAArB,CAzByC;;MA2BzC,IAAKC,CAAAA,KAAL,GAAa,IAAA,CAAKD,IAAlB,CAAA;EACA,IAAA,IAAA,CAAK7B,KAAL,GAAa,IAAK6B,CAAAA,IAAL,GAAY,KAAK,CAAjB,GAAqB,IAAKhB,CAAAA,GAAL,EAAlC,CA5ByC;EA6B5C,GAAA;;;;aACD,SAAM,GAAA,GAAA;EACF;EACR;EACA;EACA;EACQ;EACApB,MAAAA,iBAAiB,CAAC,IAAD,CAAjB,CANE;EAQF;;QACA,IAAMsC,GAAG,GAAG,IAAA,CAAKP,MAAL,CAAYzC,IAAZ,CAAiB,IAAKoC,CAAAA,EAAtB,CAAZ,CATE;EAWF;;QACAzB,gBAAgB,EAAA,CAAA;QAChB,OAAOqC,GAAP,CAbE;EAcL,KAAA;;;aACD,SAAW,QAAA,GAAA;EACP;EACA,MAAA,IAAA,CAAK/B,KAAL,GAAa,IAAKa,CAAAA,GAAL,EAAb,CAAA;QACA,IAAKiB,CAAAA,KAAL,GAAa,KAAb,CAAA;EACH,KAAA;EACD;EACJ;EACA;EACA;EACA;;;;EACI,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOlB,GAAP,EAAY;EACR;EACA;EACA,MAAA,IAAM5B,EAAE,GAAG4B,GAAG,CAAC5B,EAAf,CAAA;;QACA,IAAI,CAAC,KAAK2C,MAAL,CAAYK,GAAZ,CAAgBhD,EAAhB,CAAL,EAA0B;EACtB;EACA,QAAA,IAAA,CAAK0C,IAAL,CAAUpC,IAAV,CAAesB,GAAf,CAAA,CAAA;EACA,QAAA,IAAA,CAAKe,MAAL,CAAYM,GAAZ,CAAgBjD,EAAhB,EAHsB;;UAKtB4B,GAAG,CAACsB,MAAJ,CAAW,IAAX,CAAA,CAAA;EACH,OAAA;EACJ,KAAA;EACD;EACJ;EACA;;;;aACI,SAAS,MAAA,GAAA;EACL;QACA,IAAI,IAAA,CAAKL,IAAT,EAAe;EACX;UAEA,OAAQ,IAAA,CAAKC,KAAL,GAAa,IAArB,CAAA;EACH,OANI;EAQL;EACA;;;EACAK,MAAAA,YAAY,CAAC,IAAD,CAAZ,CAVK;EAYR,KAAA;EACD;EACJ;EACA;;;;aACI,SAAM,GAAA,GAAA;EACF;EACA;EACA,MAAA,IAAMnB,MAAM,GAAG,IAAA,CAAKH,GAAL,EAAf,CAHE;;EAKF,MAAA,IAAA,CAAKY,IAAL,IAAa,IAAKH,CAAAA,QAAL,CAAcvC,IAAd,CAAmB,IAAKoC,CAAAA,EAAxB,EAA4BH,MAA5B,EAAoC,IAAA,CAAKhB,KAAzC,CAAb,CAAA;QACA,IAAKA,CAAAA,KAAL,GAAagB,MAAb,CAAA;EACH,KAAA;;;aACD,SAAS,MAAA,GAAA;EACL;EACA;EACA;EACA,MAAA,IAAIoB,CAAC,GAAG,IAAKV,CAAAA,IAAL,CAAU9B,MAAlB,CAAA;;QACA,OAAOwC,CAAC,EAAR,EAAY;EACR;EACA;EACA;EACA,QAAA,IAAA,CAAKV,IAAL,CAAUU,CAAV,CAAatB,CAAAA,MAAb,GAJQ;EAMR;EACH,OAAA;EACJ,KAAA;;;;EAGL,CAAA,EAAA,CAAA;;;EACA,IAAIuB,KAAK,GAAG,EAAZ;;EAEA,IAAIL,GAAG,GAAG,EAAV;;EAEA,IAAIM,OAAO,GAAG,KAAd,CAAA;EAGA;EACA;EACA;EACA;;EACA,SAASH,YAAT,CAAsB9C,OAAtB,EAA+B;EAC3B,EAAA,IAAML,EAAE,GAAGK,OAAO,CAACL,EAAnB,CAD2B;;EAG3B,EAAA,IAAI,CAACgD,GAAG,CAAChD,EAAD,CAAR,EAAc;MACVqD,KAAK,CAAC/C,IAAN,CAAWD,OAAX,CAAA,CAAA;EACA2C,IAAAA,GAAG,CAAChD,EAAD,CAAH,GAAU,IAAV,CAFU;;MAIV,IAAI,CAACsD,OAAL,EAAc;EACV;EACA;EACA;QACAC,QAAQ,CAACC,mBAAD,CAAR,CAAA;EACAF,MAAAA,OAAO,GAAG,IAAV,CAAA;EACH,KAAA;EACJ,GAAA;EACJ,CAAA;EACD;EACA;EACA;EACA;;;EACA,SAASE,mBAAT,GAA+B;EAC3B;IACA,IAAMC,UAAU,GAAOJ,kBAAAA,CAAAA,KAAP,CAAhB,CAAA;;IACAA,KAAK,GAAG,EAAR,CAH2B;;EAI3BL,EAAAA,GAAG,GAAG,EAAN,CAAA;IACAM,OAAO,GAAG,KAAV,CAL2B;;EAO3BG,EAAAA,UAAU,CAACrE,OAAX,CAAmB,UAACiB,OAAD,EAAA;MAAA,OAAaA,OAAO,CAACqD,GAAR,EAAb,CAAA;KAAnB,CAAA,CAAA;EACH;;;EAED,IAAIC,SAAS,GAAG,EAAhB;;EAEA,IAAIC,OAAO,GAAG,KAAd,CAAA;EACA;EACA;EACA;;EACA,SAASC,cAAT,GAA0B;EACtB;EACA;IACA,IAAMC,GAAG,GAAOH,kBAAAA,CAAAA,SAAP,CAAT,CAAA;;EACAA,EAAAA,SAAS,GAAG,EAAZ,CAAA;EACAC,EAAAA,OAAO,GAAG,KAAV,CAAA;EACAE,EAAAA,GAAG,CAAC1E,OAAJ,CAAY,UAAC2E,EAAD,EAAA;EAAA,IAAA,OAAQA,EAAE,EAAV,CAAA;KAAZ,CAAA,CAAA;EACH,CAAA;EACD;EACA;EACA;;;EACA,IAAIC,SAAS,GAAG,IAAhB,CAAA;;EACA,IAAIC,OAAJ,EAAa;EACTD,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;EAAA,IAAA,OAAMC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuBN,cAAvB,CAAN,CAAA;KAAZ,CAAA;EACH,CAFD,MAEO,IAAIO,gBAAJ,EAAsB;EACzB;IACA,IAAM1C,QAAQ,GAAG,IAAI0C,gBAAJ,CAAqBP,cAArB,CAAjB,CAFyB;;IAIzB,IAAMQ,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,CAAxB,CAAjB,CAJyB;EAMzB;;EACA7C,EAAAA,QAAQ,CAAC8C,OAAT,CAAiBH,QAAjB,EAA2B;EACvBI,IAAAA,aAAa,EAAE,IAAA;KADnB,CAAA,CAAA;;EAGAT,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;EAAA,IAAA,OAAOK,QAAQ,CAACK,WAAT,GAAuB,CAA9B,CAAA;KAAZ,CAAA;EACH,CAXM,MAWA,IAAIC,YAAJ,EAAkB;EACrB;EACAX,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;MAAA,OAAMW,YAAY,CAACd,cAAD,CAAlB,CAAA;KAAZ,CAAA;EACH,CAHM,MAGA;EACHG,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;EAAA,IAAA,OAAMY,UAAU,CAACf,cAAD,EAAiB,CAAjB,CAAhB,CAAA;KAAZ,CAAA;EACH,CAAA;EACD;EACA;EACA;EACA;EACA;;;EACO,SAASN,QAAT,CAAkBQ,EAAlB,EAAsB;EACzB;IACAJ,SAAS,CAACrD,IAAV,CAAeyD,EAAf,CAAA,CAAA;;IACA,IAAI,CAACH,OAAL,EAAc;EACV;EACA;MACAI,SAAS,EAAA,CAAA;EACTJ,IAAAA,OAAO,GAAG,IAAV,CAAA;EACH,GAAA;EACJ;;EChOD,SAASiB,KAAT,CAAe1C,EAAf,EAAmBhC,MAAnB,EAA2BoB,GAA3B,EAAgC;EAC5BtC,EAAAA,MAAM,CAAC8B,cAAP,CAAsBoB,EAAtB,EAA0BZ,GAA1B,EAA+B;EAC7BN,IAAAA,UAAU,EAAE,IADiB;EAE7BY,IAAAA,GAF6B,EAEvB,SAAA,GAAA,GAAA;EACJ,MAAA,OAAOM,EAAE,CAAChC,MAAD,CAAF,CAAWoB,GAAX,CAAP,CAAA;OAH2B;MAK7BQ,GAL6B,EAAA,SAAA,GAAA,CAKzBC,MALyB,EAKjB;EACVG,MAAAA,EAAE,CAAChC,MAAD,CAAF,CAAWoB,GAAX,IAAkBS,MAAlB,CAAA;EACD,KAAA;KAPH,CAAA,CAAA;EASD,CAAA;;EACH,SAAS8C,SAAT,CAAmB3C,EAAnB,EAAuB;EACnB;EACA,EAAA,IAAM4C,IAAI,GAAG5C,EAAE,CAAC6C,QAAhB,CAFmB;;IAGnB,IAAID,IAAI,CAACjE,IAAT,EAAe;EACX;MACAmE,QAAQ,CAAC9C,EAAD,CAAR,CAAA;EACL,GAAA;;IACD,IAAI4C,IAAI,CAACG,QAAT,EAAmB;EACjB;MACAC,YAAY,CAAChD,EAAD,CAAZ,CAAA;EACD,GAVoB;;;IAYrB,IAAI4C,IAAI,CAACK,KAAT,EAAgB;MACdC,SAAS,CAAClD,EAAD,CAAT,CAAA;EACD,GAAA;EAEF,CAAA;;EACD,SAASkD,SAAT,CAAmBlD,EAAnB,EAAuB;EACrB;EACA;EACA;EACA;EACA;IACA,IAAMiD,KAAK,GAAGjD,EAAE,CAAC6C,QAAH,CAAYI,KAA1B,CANqB;;EAOrB,EAAA,KAAK,IAAI7D,GAAT,IAAgB6D,KAAhB,EAAuB;EACrB;EACA,IAAA,IAAME,OAAO,GAAGF,KAAK,CAAC7D,GAAD,CAArB,CAFqB;;EAGrB,IAAA,IAAIzC,KAAK,CAACoC,OAAN,CAAcoE,OAAd,CAAJ,EAA4B;EAC1B,MAAA,KAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,OAAO,CAAC1E,MAA5B,EAAoCwC,CAAC,EAArC,EAAyC;UACvCmC,UAAU,CAACpD,EAAD,EAAKZ,GAAL,EAAU+D,OAAO,CAAClC,CAAD,CAAjB,CAAV,CAAA;EACD,OAAA;EACF,KAJD,MAIO;EACLmC,MAAAA,UAAU,CAACpD,EAAD,EAAKZ,GAAL,EAAU+D,OAAV,CAAV,CAAA;EACD,KAAA;EACF,GAAA;EACF,CAAA;;EAED,SAASC,UAAT,CAAoBpD,EAApB,EAAwBC,QAAxB,EAAkCkD,OAAlC,EAA2C;EACzC,EAAA,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;EAC/BA,IAAAA,OAAO,GAAGnD,EAAE,CAACmD,OAAD,CAAZ,CAAA;EACD,GAAA;;EACD,EAAA,OAAOnD,EAAE,CAACqD,MAAH,CAAUpD,QAAV,EAAoBkD,OAApB,CAAP,CAAA;EACD,CAAA;;EACD,SAASL,QAAT,CAAkB9C,EAAlB,EAAsB;EAClB;EACA;EACA,EAAA,IAAIrB,IAAI,GAAGqB,EAAE,CAAC6C,QAAH,CAAYlE,IAAvB,CAAA;EACA,EAAA,IAAIpC,UAAU,CAACoC,IAAD,CAAd,EAAsBA,IAAI,GAAGA,IAAI,CAACf,IAAL,CAAUoC,EAAV,CAAP,CAJJ;;EAKlBlD,EAAAA,MAAM,CAAC8B,cAAP,CAAsBoB,EAAtB,EAA0B,OAA1B,EAAmC;EAC/BsD,IAAAA,YAAY,EAAE,IADiB;EAE/B;EACAC,IAAAA,QAAQ,EAAE,IAHqB;EAI/B1E,IAAAA,KAAK,EAAEF,IAAAA;EAJwB,GAAnC,EALkB;;EAYlBY,EAAAA,UAAQ,CAACZ,IAAD,CAAR,CAZkB;;EAclB,EAAA,KAAK,IAAIS,GAAT,IAAgBT,IAAhB,EAAsB;MAClB+D,KAAK,CAAC1C,EAAD,EAAK,OAAL,EAAcZ,GAAd,CAAL,CADkB;EAErB,GAAA;EACJ,CAAA;;EAED,SAAS4D,YAAT,CAAsBhD,EAAtB,EAA0B;EACxB,EAAA,IAAM+C,QAAQ,GAAG/C,EAAE,CAAC6C,QAAH,CAAYE,QAA7B,CAAA;IACA,IAAMS,QAAQ,GAAIxD,EAAE,CAACyD,iBAAH,GAAuB,EAAzC,CAFwB;;EAGxB,EAAA,KAAK,IAAMrE,GAAX,IAAkB2D,QAAlB,EAA4B;EAC1B;EACA;EACA;EACA,IAAA,IAAIW,OAAO,GAAGX,QAAQ,CAAC3D,GAAD,CAAtB,CAAA;EACA,IAAA,IAAIuE,MAAM,GAAV,KAAA,CAAA,CAAA;EACA,IAAA,SAAA;EACA,IAAA,IAAMtD,MAAM,GAAG9D,UAAU,CAACmH,OAAD,CAAV,GAAsBA,OAAtB,IAAkCC,MAAM,GAAGD,OAAO,CAAC9D,GAAlB,EAAwBS,MAAzD,CAAf,CAAA;MACAmD,QAAQ,CAACpE,GAAD,CAAR,GAAgB,IAAIW,OAAJ,CAAYC,EAAZ,EAAgBK,MAAhB,EAAwB;EAAEK,MAAAA,IAAI,EAAE,IAAA;OAAhC,CAAhB,CAR0B;EAS1B;;EACAkD,IAAAA,cAAc,CAAC5D,EAAD,EAAKZ,GAAL,EAAUuE,MAAV,CAAd,CAAA;EAED,GAAA;EACF,CAAA;;EAED,SAASC,cAAT,CAAwB5F,MAAxB,EAAgCoB,GAAhC,EAAqCuE,MAArC,EAA6C;EAC3C7G,EAAAA,MAAM,CAAC8B,cAAP,CAAsBZ,MAAtB,EAA8BoB,GAA9B,EAAmC;EACjC;EACAM,IAAAA,GAAG,EAAEmE,oBAAoB,CAACzE,GAAD,CAFQ;EAGjCQ,IAAAA,GAAG,EAAE+D,MAAAA;KAHP,CAAA,CAAA;EAKD,CAAA;;EAED,SAASE,oBAAT,CAA8BzE,GAA9B,EAAmC;EACjC;EACA;IACA,OAAO,SAAS0E,UAAT,GAAsB;EACzB;MACF,IAAM5F,OAAO,GAAG,IAAKuF,CAAAA,iBAAL,CAAuBrE,GAAvB,CAAhB,CAF2B;;MAG3B,IAAIlB,OAAO,CAACyC,KAAZ,EAAmB;EACjB;EACA;QACAzC,OAAO,CAAC6F,QAAR,EAAA,CAHiB;EAIlB,KAAA;;MACD,IAAIjG,GAAG,CAACE,MAAR,EAAgB;EACd;EACA;EACAE,MAAAA,OAAO,CAACyB,MAAR,EAAA,CAAA;EACD,KAAA;;EACD,IAAA,OAAOzB,OAAO,CAACW,KAAf,CAb2B;KAA7B,CAAA;EAeD,CAAA;;EAEM,SAASmF,cAAT,CAAwBC,GAAxB,EAA6B;EAClCA,EAAAA,GAAG,CAACrH,SAAJ,CAAcsH,SAAd,GAA0B9C,QAA1B,CAAA;EACA6C,EAAAA,GAAG,CAACrH,SAAJ,CAAcsH,SAAd,GAA0B9C,QAA1B,CAAA;EACA;EACF;EACA;EACE;;IACAtE,MAAM,CAAC8B,cAAP,CAAsBqF,GAAG,CAACrH,SAA1B,EAAqC,QAArC,EAA+C;EAC7C;EACJ;EACA;EACA;EACA;EACA;EACIiC,IAAAA,KAP6C,EAOvCoB,SAAAA,KAAAA,CAAAA,QAPuC,EAO7BE,QAP6B,EAOL;QAAA,IAAdD,OAAc,uEAAJ,EAAI,CAAA;EACtC;EACA;EACA;EACA,MAAA,IAAIH,OAAJ,CAAY,IAAZ,EAAkBE,QAAlB,EAAAkE,cAAA,CAAA;EAA8B7D,QAAAA,IAAI,EAAE,IAAA;SAASJ,EAAAA,OAA7C,GAAwDC,QAAxD,CAAA,CAAA;EACD,KAAA;KAZH,CAAA,CAAA;EAcD;;ECjJD;EACA,IAAMiE,YAAY,GAAG,CAArB;;EAEA,IAAMC,SAAS,GAAG,CAAlB;;ECFA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAMC,MAAM,GAAG,6BAAf;;EAEA;EACA;EACA;EACA;EACA;;EACA,IAAMC,YAAY,GAAUD,MAAAA,CAAAA,MAAAA,CAAAA,MAAV,kBAAwBA,MAAxB,EAAA,GAAA,CAAlB;;EAGA;EACA;EACA;EACA;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,CAAA,IAAA,CAAA,MAAA,CAAgBF,YAAhB,CAArB,CAAA,CAAA;EAGA;EACA;EACA;EACA;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,EAAA,QAAA,CAAA,CAAf;;EAIA,IAAMI,SAAS,GACb,2EADF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB,CAAA;EAGA;EACA;EACA;;EACO,IAAMC,YAAY,GAAG,0BAArB;;EAGP,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EACvB;EACF;EACA;EACA;EACA;EACA;EACE,EAAA,IAAMC,KAAK,GAAG,EAAd,CAPuB;;IASvB,IAAIC,SAAS,GAAG,IAAhB,CAAA;EACA,EAAA,IAAIC,IAAI,GAAG,IAAX,CAVuB;;EAavB,EAAA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;EACpC;MACA,OAAO;EACLD,MAAAA,GAAG,EAAHA,GADK;EAELE,MAAAA,IAAI,EAAElB,YAFD;EAGLmB,MAAAA,QAAQ,EAAE,EAHL;EAILF,MAAAA,KAAK,EAALA,KAJK;EAKLG,MAAAA,MAAM,EAAE,IAAA;OALV,CAAA;EAOD,GAAA;;EAED,EAAA,SAASC,KAAT,CAAeL,GAAf,EAAoBC,KAApB,EAA2BK,WAA3B,EAAwC;EAAA,IAAA,IAAA,KAAA,CAAA;;EACtC;EACA;MACA,IAAMC,IAAI,GAAGR,gBAAgB,CAACC,GAAD,EAAMC,KAAN,CAA7B,CAHsC;;EAKtCH,IAAAA,IAAI,GAAGA,CAAAA,KAAAA,GAAAA,IAAH,MAAWS,IAAAA,IAAAA,KAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,GAAAA,IAAf,CALsC;EAOtC;;EACAV,IAAAA,SAAS,KAAMU,IAAI,CAACH,MAAL,GAAcP,SAAf,EAA2BA,SAAS,CAACM,QAAV,CAAmBpH,IAAnB,CAAwBwH,IAAxB,CAAhC,CAAT,CARsC;;MAUtC,IAAID,WAAJ,EAAiB,OAVqB;;EAYtCV,IAAAA,KAAK,CAAC7G,IAAN,CAAWwH,IAAX,EAZsC;;MActCV,SAAS,GAAGU,IAAZ,CAdsC;EAgBvC,GAAA;;IAED,SAASC,KAAT,CAAeC,IAAf,EAAqB;EACnB;MACAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,aAAb,EAA4B,EAA5B,CAAP,CAFmB;EAInB;;EACAD,IAAAA,IAAI,IACFZ,SAAS,CAACM,QAAV,CAAmBpH,IAAnB,CAAwB;EACtBmH,MAAAA,IAAI,EAAEjB,SADgB;EAEtBwB,MAAAA,IAAI,EAAJA,IAFsB;EAGtBL,MAAAA,MAAM,EAAEP,SAAAA;EAHc,KAAxB,CADF,CAAA;EAMD,GAAA;;IAED,SAASc,GAAT,CAAaX,GAAb,EAAkB;EAChB;EACA;EACA,IAAA,IAAMO,IAAI,GAAGX,KAAK,CAACxG,GAAN,EAAb,CAHgB;;EAKhB,IAAA,IAAI4G,GAAG,KAAKO,IAAI,CAACP,GAAjB,EAAsB,CAGrB;;MACDH,SAAS,GAAGD,KAAK,CAACA,KAAK,CAACvG,MAAN,GAAe,CAAhB,CAAjB,CAAA;EACD,GAAA;;EAED,EAAA,SAASuH,aAAT,GAAyB;EACvB;MACA,IAAMP,KAAK,GAAGV,IAAI,CAACkB,KAAL,CAAWzB,YAAX,CAAd,CAFuB;;EAGvB,IAAA,IAAIiB,KAAJ,EAAW;EACT;EACA,MAAA,IAAMQ,KAAK,GAAG;EACZ;EACAC,QAAAA,OAAO,EAAET,KAAK,CAAC,CAAD,CAFF;EAGZ;EACAJ,QAAAA,KAAK,EAAE,EAJK;EAKZ;EACAK,QAAAA,WAAW,EAAE,KAAA;SANf,CAAA;QAQAS,OAAO,CAACV,KAAK,CAAC,CAAD,CAAL,CAAShH,MAAV,CAAP,CAVS;;QAYT,IAAI2H,IAAJ,EAAUL,IAAV,CAAA;;QACA;EAEE,MAAA,EAAEA,IAAG,GAAGhB,IAAI,CAACkB,KAAL,CAAWrB,aAAX,CAAR,CAAA,KACCwB,IAAI,GAAGrB,IAAI,CAACkB,KAAL,CAAWtB,SAAX,CADR,CAFF,EAIE;EACA;EACAwB,QAAAA,OAAO,CAACC,IAAI,CAAC,CAAD,CAAJ,CAAQ3H,MAAT,CAAP,CAAA;EACAwH,QAAAA,KAAK,CAACZ,KAAN,CAAYlH,IAAZ,CAAiB;EACf;EACAkI,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAFK;EAGf;EACA;EACAvH,UAAAA,KAAK,EAAEuH,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD,CAA1B,IAAiC,IAAA;WAL1C,CAAA,CAAA;EAOD,OA3BQ;;;EA6BT,MAAA,IAAIL,IAAJ,EAAS;UACPI,OAAO,CAACJ,IAAG,CAAC,CAAD,CAAH,CAAOtH,MAAR,CAAP,CADO;;EAGP,QAAA,IAAIsH,IAAG,CAAC,CAAD,CAAH,CAAOO,QAAP,CAAgB,IAAhB,CAAJ,EAA2BL,KAAK,CAACP,WAAN,GAAoB,IAApB,CAAA;EAC5B,OAjCQ;;;EAmCT,MAAA,OAAOO,KAAP,CAAA;EACD,KAvCsB;;;EAyCvB,IAAA,OAAO,KAAP,CAAA;EACD,GAAA;;IAED,SAASE,OAAT,CAAiBV,KAAjB,EAAwB;EACtB;EACAV,IAAAA,IAAI,GAAGA,IAAI,CAACwB,SAAL,CAAed,KAAf,CAAP,CAAA;EACD,GAlHsB;;;EAoHvB,EAAA,OAAOV,IAAP,EAAa;EACX;EACA;EACA,IAAA,IAAIyB,OAAO,GAAGzB,IAAI,CAAC0B,OAAL,CAAa,GAAb,CAAd,CAAA;;MACA,IAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA,MAAA,IAAME,aAAa,GAAGV,aAAa,EAAnC,CAFiB;;EAGjB,MAAA,IAAIU,aAAJ,EAAmB;EACjB;EACAjB,QAAAA,KAAK,CACHiB,aAAa,CAACR,OADX,EAEHQ,aAAa,CAACrB,KAFX,EAGHqB,aAAa,CAAChB,WAHX,CAAL,CAAA;EAKA,QAAA,SAAA;EACD,OAXgB;;;EAajB,MAAA,IAAMiB,WAAW,GAAG5B,IAAI,CAACkB,KAAL,CAAWvB,MAAX,CAApB,CAAA;;EACA,MAAA,IAAIiC,WAAJ,EAAiB;UACfR,OAAO,CAACQ,WAAW,CAAC,CAAD,CAAX,CAAelI,MAAhB,CAAP,CADe;;EAGfsH,QAAAA,GAAG,CAACY,WAAW,CAAC,CAAD,CAAZ,CAAH,CAAA;EACA,QAAA,SAAA;EACD,OAAA;EACF,KAxBU;;;MA0BX,IAAIH,OAAO,GAAG,CAAd,EAAiB;EACf;QACA,IAAMX,IAAI,GAAGd,IAAI,CAACwB,SAAL,CAAe,CAAf,EAAkBC,OAAlB,CAAb,CAAA;;EACA,MAAA,IAAIX,IAAJ,EAAU;EACRM,QAAAA,OAAO,CAACN,IAAI,CAACpH,MAAN,CAAP,CADQ;;UAERmH,KAAK,CAACC,IAAD,CAAL,CAAA;EACD,OANc;;EAQhB,KAAA;EACF,GAvJsB;EAyJvB;;;EACA,EAAA,OAAOX,IAAP,CAAA;EACD;;EClND;EACA;EACA;EACA;EACA;;EACO,SAAS0B,iBAAT,CAA2BC,QAA3B,EAAqC;EAC1C;EACA;EACA,EAAA,IAAMC,GAAG,GAAGhC,SAAS,CAAC+B,QAAD,CAArB,CAH0C;EAM1C;EACA;;EACA,EAAA,IAAME,eAAe,GAAGC,aAAa,CAACF,GAAD,CAArC,CAR0C;EAU1C;EACA;EACA;;IACA,IAAMG,MAAM,GAAG,IAAIC,QAAJ,gCAAqCH,eAArC,EAAA,GAAA,CAAA,CAAf,CAb0C;;EAe1C,EAAA,OAAOE,MAAP,CAAA;EACD,CAAA;EAED;EACA;EACA;EACA;EACA;;EACA,SAASD,aAAT,CAAuBF,GAAvB,EAA4B;EAC1B,EAAA,IAAMvB,QAAQ,GAAG4B,gBAAgB,CAACL,GAAG,CAACvB,QAAL,CAAjC,CAAA;EACA,EAAA,IAAI6B,IAAI,GAAA,MAAA,CAAA,MAAA,CAAUN,GAAG,CAAC1B,GAAd,EACN0B,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAACzB,KAAJ,CAAU5G,MAAV,GAAmB,CAAnB,GAAuB4I,aAAa,CAACP,GAAG,CAACzB,KAAL,CAApC,GAAkD,MAD5C,SAGNyB,GAAG,CAACvB,QAAJ,CAAa9G,MAAb,GAAA,GAAA,CAAA,MAAA,CAA0B8G,QAA1B,CAAA,GAAuC,EAHjC,EAAR,GAAA,CAAA,CAAA;EAKA,EAAA,OAAO6B,IAAP,CAAA;EACD,CAAA;EAGD;EACA;EACA;EACA;;;EACA,SAASC,aAAT,CAAuBhC,KAAvB,EAA8B;EAC5B,EAAA,IAAIiC,GAAG,GAAG,EAAV,CAD4B;;EAE5B,EAAA,KAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoE,KAAK,CAAC5G,MAA1B,EAAkCwC,CAAC,EAAnC,EAAuC;EACrC,IAAA,IAAMmF,IAAI,GAAGf,KAAK,CAACpE,CAAD,CAAlB,CAAA;;EACA,IAAA,IAAImF,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAA,MAAA,CAAA,YAAA;EACzB;EACA;UACA,IAAMkB,KAAK,GAAG,EAAd,CAAA;UACAnB,IAAI,CAACvH,KAAL,CAAW2I,KAAX,CAAiB,GAAjB,CAAA,CAAsBvK,OAAtB,CAA8B,UAACqC,IAAD,EAAU;EACtC,UAAA,IAAI,CAACA,IAAI,CAACmI,IAAL,EAAL,EAAkB,OADoB;;EAEtC,UAAA,IAAA,WAAA,GAAmBnI,IAAI,CAACkI,KAAL,CAAW,GAAX,CAAnB;EAAA,cAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;EAAA,cAAKpI,GAAL,GAAA,YAAA,CAAA,CAAA,CAAA;EAAA,cAAUP,KAAV,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;EACA0I,UAAAA,KAAK,CAACnI,GAAD,CAAL,GAAaP,KAAb,CAAA;WAHF,CAAA,CAAA;UAKAyI,GAAG,IAAA,EAAA,CAAA,MAAA,CAAOlB,IAAI,CAACC,IAAZ,EAAA,GAAA,CAAA,CAAA,MAAA,CAAoBqB,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAApB,EAAH,GAAA,CAAA,CAAA;EATyB,OAAA,GAAA,CAAA;EAU1B,KAVD,MAUOD,GAAG,IAAA,IAAA,CAAA,MAAA,CAAQlB,IAAI,CAACC,IAAb,EAAsBqB,KAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,SAAL,CAAevB,IAAI,CAACvH,KAApB,CAAtB,EAAA,GAAA,CAAH,CAZ8B;;EAatC,GAAA;;IACD,OAAWyI,GAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAAC/J,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX,EAAA,GAAA,CAAA,CAhB4B;EAiB7B,CAAA;EAGD;EACA;EACA;EACA;;;EAGA,SAAS4J,gBAAT,CAA0B5B,QAA1B,EAAoC;EAClC,EAAA,IAAIA,QAAJ,EAAc;EACZ,IAAA,OAAOA,QAAQ,CAACqC,GAAT,CAAa,UAACC,KAAD,EAAA;QAAA,OAAWC,aAAa,CAACD,KAAD,CAAxB,CAAA;EAAA,KAAb,CAA8CE,CAAAA,IAA9C,CAAmD,GAAnD,CAAP,CAAA;EACD,GAAA;EACF,CAAA;EAGD;EACA;EACA;EACA;EACA;;;EACA,SAASD,aAAT,CAAuBnC,IAAvB,EAA6B;IAC3B,QAAQA,IAAI,CAACL,IAAb;EACE,IAAA,KAAKlB,YAAL;EACE;EACA;QACA,OAAO4C,aAAa,CAACrB,IAAD,CAApB,CAAA;EAA4B;;EAC9B,IAAA,KAAKtB,SAAL;EACE;EACA;EACA,MAAA,IAAMwB,IAAI,GAAGF,IAAI,CAACE,IAAlB,CAAA;;EACA,MAAA,IAAI,CAAChB,YAAY,CAACmD,IAAb,CAAkBnC,IAAlB,CAAL,EAA8B;EAC5B;EACA,QAAA,OAAA,KAAA,CAAA,MAAA,CAAa6B,IAAI,CAACC,SAAL,CAAe9B,IAAf,CAAb,EAAA,GAAA,CAAA,CAAA;EACD,OAPH;;;EASE,MAAA,IAAMoC,MAAM,GAAG,EAAf,CATF;;QAWE,IAAIhC,KAAK,GAAG,IAAZ,CAAA;EACApB,MAAAA,YAAY,CAACqD,SAAb,GAAyB,CAAzB,CAZF;EAaE;;QACA,IAAIA,SAAS,GAAG,CAAhB,CAAA;;QACA,OAAQjC,KAAK,GAAGpB,YAAY,CAACsD,IAAb,CAAkBtC,IAAlB,CAAhB,EAA0C;EACxC;EACA;EACA,QAAA,IAAIuC,KAAK,GAAGnC,KAAK,CAACmC,KAAlB,CAAA;UACA,IAAIA,KAAK,GAAGF,SAAZ,EACED,MAAM,CAAC9J,IAAP,CAAYuJ,IAAI,CAACC,SAAL,CAAe9B,IAAI,CAACtI,KAAL,CAAW2K,SAAX,EAAsBE,KAAtB,CAAf,CAAZ,CAAA,CALsC;;UAMxCH,MAAM,CAAC9J,IAAP,CAAA,KAAA,CAAA,MAAA,CAAkB8H,KAAK,CAAC,CAAD,CAAL,CAASwB,IAAT,EAAlB,EAAA,GAAA,CAAA,CAAA,CANwC;;UAOxCS,SAAS,GAAGE,KAAK,GAAGnC,KAAK,CAAC,CAAD,CAAL,CAASxH,MAA7B,CAAA;EACD,OAvBH;;;EAyBE,MAAA,IAAIyJ,SAAS,GAAGrC,IAAI,CAACpH,MAArB,EAA6B;EAC3BwJ,QAAAA,MAAM,CAAC9J,IAAP,CAAYuJ,IAAI,CAACC,SAAL,CAAe9B,IAAI,CAACtI,KAAL,CAAW2K,SAAX,CAAf,CAAZ,CAAA,CAAA;EACD,OA3BH;;;EA6BE,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaD,MAAM,CAACF,IAAP,CAAY,GAAZ,CAAb,EAAA,GAAA,CAAA,CAAA;;EACF,IAAA;EACE,MAAA,OAAO,EAAP,CAAA;EApCJ,GAAA;EAsCD;;EC1HD;EACA;EACA,SAASM,KAAT,CAAerI,EAAf,EAAmBoF,GAAnB,EAAwBhG,GAAxB,EAA6BkJ,KAA7B,EAAoC/C,QAApC,EAA8CM,IAA9C,EAAoD0C,gBAApD,EAAsE;EAClE;EACA;IACA,OAAO;EACHvI,IAAAA,EAAE,EAAFA,EADG;EAEHoF,IAAAA,GAAG,EAAHA,GAFG;EAGHhG,IAAAA,GAAG,EAAHA,GAHG;EAGE;EACLyG,IAAAA,IAAI,EAAJA,IAJG;EAKHyC,IAAAA,KAAK,EAALA,KALG;EAKI;EACPC,IAAAA,gBAAgB,EAAhBA,gBANG;EAOHhD,IAAAA,QAAQ,EAARA,QAAAA;KAPJ,CAAA;EAUH,CAAA;;EACD,SAASiD,kBAAT,CAA4BxI,EAA5B,EAAgCoF,GAAhC,EAAqCzG,IAArC,EAAwD;EACpD;IACA,IAAMS,GAAG,GAAGT,IAAH,KAAA,IAAA,IAAGA,IAAH,KAAGA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAES,GAAlB,CAAA;EACAA,EAAAA,GAAG,IAAI,OAAOT,IAAI,CAACS,GAAnB,CAAA;;EAHoD,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAVmG,QAAU,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAVA,QAAU,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;;IAIpD,OAAO8C,KAAK,CAACrI,EAAD,EAAKoF,GAAL,EAAUhG,GAAV,EAAeT,IAAf,EAAqB4G,QAArB,CAAZ,CAAA;EACH;;;EAED,SAASkD,eAAT,CAAyBzI,EAAzB,EAA6B6F,IAA7B,EAAmC;EAC/B,EAAA,OAAOwC,KAAK,CAACrI,EAAD,EAAK0I,SAAL,EAAgBA,SAAhB,EAA2BA,SAA3B,EAAsCA,SAAtC,EAAiD7C,IAAjD,EAAuD6C,SAAvD,CAAZ,CAAA;EACH;;ECzBD,SAASC,KAAT,CAAeC,QAAf,EAAyBP,KAAzB,EAAgC;EAC5B,EAAA,IAAI,CAACO,QAAL,EAAe,OAAOC,SAAS,CAACR,KAAD,CAAhB,CAAA;EACf,EAAA,IAAMS,aAAa,GAAGF,QAAQ,CAACG,QAA/B,CAF4B;;EAG5B,EAAA,IAAID,aAAJ,EAAmB;MACf,IAAME,GAAG,GAAGJ,QAAZ,CAAA;EACA,IAAA,IAAMK,SAAS,GAAGD,GAAG,CAACE,UAAtB,CAFe;;EAIf,IAAA,IAAMC,MAAM,GAAGN,SAAS,CAACR,KAAD,CAAxB,CAJe;;MAMfe,YAAY,CAACH,SAAD,EAAYE,MAAZ,EAAoBH,GAAG,CAACK,WAAxB,CAAZ,CANe;;EAOfC,IAAAA,WAAW,CAACL,SAAD,EAAYD,GAAZ,CAAX,CAPe;;MASf,OAAOG,MAAP,CATe;EAUlB,GAEA;EACJ,CAAA;;EAED,SAASN,SAAT,CAAmBR,KAAnB,EAA0B;EACtB;EACA;EACA,EAAA,IACIjD,GADJ,GAKIiD,KALJ,CACIjD,GADJ;EAAA,MAEIkD,KAFJ,GAKID,KALJ,CAEIC,KAFJ;EAAA,MAGI/C,QAHJ,GAKI8C,KALJ,CAGI9C,QAHJ;EAAA,MAIIM,IAJJ,GAKIwC,KALJ,CAIIxC,IAJJ,CAAA;;EAMA,EAAA,IAAI,OAAOT,GAAP,KAAe,QAAnB,EAA6B;MACzBiD,KAAK,CAACkB,EAAN,GAAWC,aAAa,CAACpE,GAAD,CAAxB,CADyB;;MAGzBqE,UAAU,CAACpB,KAAK,CAACkB,EAAP,EAAW,EAAX,EAAejB,KAAf,CAAV,CAAA;EACA/C,IAAAA,QAAQ,CAACtI,OAAT,CAAiB,UAAC4K,KAAD,EAAW;EACxB;QACA6B,WAAW,CAACrB,KAAK,CAACkB,EAAP,EAAWV,SAAS,CAAChB,KAAD,CAApB,CAAX,CAAA;OAFJ,CAAA,CAAA;EAKH,GATD,MASO,IAAI,OAAA,CAAOzC,GAAP,CAAe,KAAA,QAAnB,EAA6B,CAA7B,MAEA;MACHiD,KAAK,CAACkB,EAAN,GAAWnH,cAAc,CAACyD,IAAD,CAAzB,CADG;EAEN,GAAA;;IACD,OAAOwC,KAAK,CAACkB,EAAb,CAAA;EACH,CAAA;;EAED,SAASnH,cAAT,CAAwBgD,GAAxB,EAA+C;IAAA,IAAlBE,IAAkB,uEAAX,SAAW,CAAA;;IAC3C,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACI,IAAA,KAAK,SAAL;EACI,MAAA,OAAOxH,QAAQ,CAACC,cAAT,CAAwBgD,GAAxB,CAAP,CAAA;EAFR,GAAA;EAIH,CAAA;;EAED,SAASoE,aAAT,CAAuBpE,GAAvB,EAA8C;IAAA,IAAlBE,IAAkB,uEAAX,SAAW,CAAA;;IAC1C,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACI,IAAA,KAAK,SAAL;EACI,MAAA,OAAOxH,QAAQ,CAACqH,aAAT,CAAuBpE,GAAvB,CAAP,CAAA;EAAoC;EAF5C,GAAA;EAIH,CAAA;;EAED,SAASqE,UAAT,CAAoBF,EAApB,EAAwBK,QAAxB,EAAkCtB,KAAlC,EAAyC;EACrC;EACA,EAAA,IAAMuB,QAAQ,GAAG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,QAAQ,CAAErC,KAAV,KAAmB,EAApC,CAFqC;;EAGrC,EAAA,IAAMuC,QAAQ,GAAG,CAAAxB,KAAK,SAAL,IAAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAK,CAAGf,KAAR,KAAiB,EAAlC,CAHqC;;EAMrC,EAAA,KAAK,IAAInI,GAAT,IAAgByK,QAAhB,EAA0B;EACtB,IAAA,IAAI,CAACC,QAAQ,CAAC1K,GAAD,CAAb,EAAoB;EAChBmK,MAAAA,EAAE,CAAChC,KAAH,CAASnI,GAAT,IAAgB,EAAhB,CAAA;EACH,KAAA;EACJ,GAAA;;EAED,EAAA,KAAK,IAAMA,IAAX,IAAkBwK,QAAlB,EAA4B;EACxB,IAAA,IAAI,CAACtB,KAAK,CAAClJ,IAAD,CAAV,EAAiB;EACb2K,MAAAA,eAAe,CAACR,EAAD,EAAKnK,IAAL,CAAf,CAAA;EACH,KAAA;EACJ,GAhBoC;;;EAmBrC,EAAA,KAAK,IAAMA,KAAX,IAAkBkJ,KAAlB,EAAyB;MACrB,IAAIlJ,KAAG,KAAK,OAAZ,EAAqB;QACjBtC,MAAM,CAACqC,IAAP,CAAYmJ,KAAK,CAAClJ,KAAD,CAAjB,CAAwBnC,CAAAA,OAAxB,CAAgC,UAAC+M,CAAD,EAAA;EAAA,QAAA,OAAQT,EAAE,CAAChC,KAAH,CAASyC,CAAT,CAAA,GAAc1B,KAAK,CAAC,OAAD,CAAL,CAAe0B,CAAf,CAAtB,CAAA;SAAhC,CAAA,CAAA;EACH,KAFD,MAEO;QACHC,YAAY,CAACV,EAAD,EAAKnK,KAAL,EAAUkJ,KAAK,CAAClJ,KAAD,CAAf,CAAZ,CAAA;EACH,KAAA;EACJ,GAAA;EACJ,CAAA;;EAED,SAAS6K,YAAT,CAAsBV,EAAtB,EAA0BnK,GAA1B,EAA+BP,KAA/B,EAAwD;IAAA,IAAlByG,IAAkB,uEAAX,SAAW,CAAA;;IACpD,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACI,IAAA,KAAK,SAAL;EACIJ,MAAAA,EAAE,CAACU,YAAH,CAAgB7K,GAAhB,EAAqBP,KAArB,CAAA,CAAA;EACA,MAAA,MAAA;EAHR,GAAA;EAKH,CAAA;;EAED,SAAS6K,WAAT,CAAqBlE,MAArB,EAA6BqC,KAA7B,EAAsD;IAAA,IAAlBvC,IAAkB,uEAAX,SAAW,CAAA;;IAClD,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;QACEnE,MAAM,CAACkE,WAAP,CAAmB7B,KAAnB,CAAA,CAAA;EACA,MAAA,MAAA;EAHJ,GAAA;EAKH,CAAA;;EAED,SAASuB,YAAT,CAAsB5D,MAAtB,EAA8BqC,KAA9B,EAAqCqC,SAArC,EAAkE;IAAA,IAAlB5E,IAAkB,uEAAX,SAAW,CAAA;;IAC9D,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACE;EACAnE,MAAAA,MAAM,CAAC4D,YAAP,CAAoBvB,KAApB,EAA2BqC,SAA3B,CAAA,CAAA;EACA,MAAA,MAAA;EAJJ,GAAA;EAMD,CAAA;;EAED,SAASZ,WAAT,CAAqB9D,MAArB,EAA6BqC,KAA7B,EAAsD;IAAA,IAAlBvC,IAAkB,uEAAX,SAAW,CAAA;;IACpD,QAAQA,IAAI,CAACqE,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;QACEnE,MAAM,CAAC8D,WAAP,CAAmBzB,KAAnB,CAAA,CAAA;EACA,MAAA,MAAA;EAHJ,GAAA;EAKD;;EC7GI,SAASsC,YAAT,CAAsBlG,GAAtB,EAA2B;EAC9BnH,EAAAA,MAAM,CAACsN,gBAAP,CAAwBnG,GAAG,CAACrH,SAA5B,EAAuC;EACnCyN,IAAAA,OAAO,EAAE;QACLxL,KAAK,EAAE,SAASwL,OAAT,GAAmB;UACtB,IAAMrK,EAAE,GAAG,IAAX,CAAA;UACA,OAAOA,EAAE,CAAC6C,QAAH,CAAYoE,MAAZ,CAAmBrJ,IAAnB,CAAwBoC,EAAxB,CAAP,CAFsB;EAGtB;EACH,OAAA;OAN8B;EAQnCsK,IAAAA,EAAE,EAAE;EACA;QACAzL,KAAK,EAAE,SAASyL,EAAT,GAAc;EACjB,QAAA,OAAO9B,kBAAkB,CAAlB,KAAA,CAAA,KAAA,CAAA,EAAA,CAAmB,IAAnB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAA4B+B,SAA5B,CAAP,CAAA,CAAA,CAAA;EACH,OAAA;OAZ8B;EAcnCC,IAAAA,EAAE,EAAE;EACA;EACA;EACA3L,MAAAA,KAAK,EAAE,SAAS2L,EAAT,CAAY3L,KAAZ,EAAmB;EACtB,QAAA,OAAO,OAAOA,CAAAA,KAAP,CAAiB,KAAA,QAAjB,GAA4B6I,IAAI,CAACC,SAAL,CAAe9I,KAAf,CAA5B,GAAoDA,KAA3D,CAAA;EACH,OAAA;OAnB8B;EAqBnC4L,IAAAA,EAAE,EAAE;EACA;QACA5L,KAAK,EAAE,SAAS4L,EAAT,GAAc;EACjB,QAAA,OAAOhC,eAAe,CAAf,KAAA,CAAA,KAAA,CAAA,EAAA,CAAgB,IAAhB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAyB8B,SAAzB,CAAP,CAAA,CAAA,CAAA;EACH,OAAA;OAzB8B;EA2BnCG,IAAAA,OAAO,EAAE;EACL7L,MAAAA,KAAK,EAAE,SAAS6L,OAAT,CAAiBrC,KAAjB,EAAwB;EAC3B,QAAA,IAAMrI,EAAE,GAAG,IAAX,CAD2B;;EAG3B,QAAA,IAAMuJ,EAAE,GAAGvJ,EAAE,CAAC2K,GAAd,CAAA;EACA,QAAA,IAAMC,QAAQ,GAAG5K,EAAE,CAAC6K,MAApB,CAJ2B;;UAM3B7K,EAAE,CAAC6K,MAAH,GAAYxC,KAAZ,CAAA;;EACA,QAAA,IAAIuC,QAAJ,EAAc;YACV5K,EAAE,CAAC2K,GAAH,GAAShC,KAAK,CAACiC,QAAD,EAAWvC,KAAX,CAAd,CAAA;EACH,SAFD,MAEO;EACH;YACArI,EAAE,CAAC2K,GAAH,GAAShC,KAAK,CAACY,EAAD,EAAKlB,KAAL,CAAd,CAAA;EACH,SAAA;EACJ,OAAA;EAdI,KAAA;KA3Bb,CAAA,CAAA;EA4CH,CAAA;EACM,SAASyC,cAAT,CAAwB9K,EAAxB,EAA4B+K,SAA5B,EAAuC;EAC1C;EACA;EACA;EACA;EACA;EACA;EAEA;EACAjO,EAAAA,MAAM,CAAC8B,cAAP,CAAsBoB,EAAtB,EAA0B,KAA1B,EAAiC;EAC7BnB,IAAAA,KAAK,EAAEkM,SADsB;EAE7BxH,IAAAA,QAAQ,EAAE,IAAA;EAFmB,GAAjC,EAT0C;EAc1C;;EACA,EAAA,IAAMyH,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EAC1B;EACA,IAAA,IAAMC,MAAM,GAAGjL,EAAE,CAACqK,OAAH,EAAf,CAF0B;;;MAI1BrK,EAAE,CAAC0K,OAAH,CAAWO,MAAX,CAAA,CAAA;KAJJ,CAAA;;IAMA,IAAIlL,OAAJ,CAAYC,EAAZ,EAAgBgL,eAAhB,EAAiC,IAAjC,EArB0C;EAsB1C;EAEH;;EC9ED;EACA;EACO,IAAME,QAAQ,GAAG,EAAjB;;EAEP,IAAMC,UAAU,GAAG,CACf,cADe,EAEf,SAFe,EAGf,aAHe,EAIf,SAJe,EAKf,cALe,EAMf,QANe,CAAnB,CAAA;EAQAA,UAAU,CAAClO,OAAX,CAAmB,UAACmO,IAAD,EAAU;EACzB;IACAF,QAAQ,CAACE,IAAD,CAAR,GAAiB,UAAUC,EAAV,EAAcC,EAAd,EAAkB;EAC/B;EACA,IAAA,IAAIA,EAAJ,EAAQ;EACJ;EACA,MAAA,IAAID,EAAJ,EAAQ;EACJ;EACA;EACA;UACA,OAAWA,EAAAA,CAAAA,MAAAA,CAAAA,kBAAAA,CAAAA,EAAX,IAAeC,EAAf,CAAA,CAAA,CAAA;EACH,OALD,MAKO;EACH;UACA,OAAO,CAACA,EAAD,CAAP,CAAA;EACH,OAAA;EACJ,KAXD,MAWO;EACH,MAAA,OAAOD,EAAP,CAAA;EACH,KAAA;KAfL,CAAA;EAiBH,CAnBD;;EAsBAH,QAAQ,CAACK,UAAT,GAAsB,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;EACjD;EACA;EACA;EACA;EACA;IACA,IAAM9N,GAAG,GAAGb,MAAM,CAACC,MAAP,CAAcyO,SAAd,CAAZ,CANiD;;EAOjD,EAAA,IAAIC,QAAJ,EAAc;EACV,IAAA,KAAK,IAAMrM,GAAX,IAAkBqM,QAAlB,EAA4B;EACxB;EACA9N,MAAAA,GAAG,CAACyB,GAAD,CAAH,GAAWqM,QAAQ,CAACrM,GAAD,CAAnB,CAAA;EACH,KAAA;EACJ,GAAA;;IACD5B,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAA,CAAA;EACA,EAAA,OAAOA,GAAP,CAAA;EACH,CAfD;;EC/BO,SAAS+N,YAAT,GAAkC;IACrC,SAASC,UAAT,CAAoBvM,GAApB,EAAyB;EACrB;EACA,IAAA,IAAI8L,QAAQ,CAAC9L,GAAD,CAAZ,EAAmB;EACfwD,MAAAA,IAAI,CAACxD,GAAD,CAAJ,GAAY8L,QAAQ,CAAC9L,GAAD,CAAR,CAAcwM,OAAO,CAACxM,GAAD,CAArB,EAA4ByM,OAAO,CAACzM,GAAD,CAAnC,CAAZ,CAAA;EACH,KAFD,MAEO;QACHwD,IAAI,CAACxD,GAAD,CAAJ,GAAYyM,OAAO,CAACzM,GAAD,CAAP,KAAiB,KAAK,CAAtB,GAA0BwM,OAAO,CAACxM,GAAD,CAAjC,GAAyCyM,OAAO,CAACzM,GAAD,CAA5D,CAAA;EACH,KAAA;EACJ,GARoC;;;IAUrC,IAAMwD,IAAI,GAAG,EAAb,CAAA;;EAVqC,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAT1C,OAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAATA,OAAS,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;;IAWrC,IAAO0L,OAAP,GAA2B1L,OAA3B,CAAA,CAAA,CAAA;QAAgB2L,OAAhB,GAA2B3L,OAA3B,CAAA,CAAA,CAAA,CAAA;;EACA,EAAA,KAAK,IAAId,GAAT,IAAgBwM,OAAhB,EAAyB;EACrB;MACAD,UAAU,CAACvM,GAAD,CAAV,CAAA;EACH,GAAA;;EAED,EAAA,KAAK,IAAIA,KAAT,IAAgByM,OAAhB,EAAyB;EACrB;EACA;EACA,IAAA,IAAI,CAACD,OAAO,CAACE,cAAR,CAAuB1M,KAAvB,CAAL,EAAkC;QAC9BuM,UAAU,CAACvM,KAAD,CAAV,CAAA;EACH,KAAA;EACJ,GAAA;;EAED,EAAA,IAAIc,OAAO,CAACzB,MAAR,GAAiB,CAArB,EAAwB;EACpByB,IAAAA,OAAO,CAAC6L,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAA,CAAA;EACA,IAAA,OAAOL,YAAY,CAAZ,KAAA,CAAA,KAAA,CAAA,EAAA,CAAa9I,IAAb,CAAA,CAAA,MAAA,CAAsB1C,OAAtB,CAAP,CAAA,CAAA;EACH,GAAA;;EACD,EAAA,OAAO0C,IAAP,CAAA;EACH;;ECjCD;EAEO,SAASoJ,SAAT,CAAmBhM,EAAnB,EAAuBoL,IAAvB,EAA6B;EAChC,EAAA,IAAMa,OAAO,GAAGjM,EAAE,CAAC6C,QAAH,CAAYuI,IAAZ,CAAhB,CAAA;;EACA,EAAA,IAAIa,OAAJ,EAAa;EACTA,IAAAA,OAAO,CAAChP,OAAR,CAAgB,UAAAiP,MAAM,EAAA;EAAA,MAAA,OAAIA,MAAM,CAACtO,IAAP,CAAYoC,EAAZ,CAAJ,CAAA;EAAA,KAAtB,EADS;EAEZ,GAAA;EACJ;;ECIM,SAASmM,SAAT,CAAmBlI,GAAnB,EAAwB;EAC3B;IACAA,GAAG,CAACrH,SAAJ,CAAcwP,KAAd,GAAsB,SAASA,KAAT,CAAelM,OAAf,EAAwB;EAC1C;EACA,IAAA,IAAMF,EAAE,GAAG,IAAX,CAF0C;EAI1C;EACA;;EACAA,IAAAA,EAAE,CAAC6C,QAAH,GAAc6I,YAAY,CAAC,IAAA,CAAKW,WAAL,CAAiBnM,OAAlB,EAA2BA,OAA3B,CAA1B,CAN0C;EAQ1C;;EACA8L,IAAAA,SAAS,CAAChM,EAAD,EAAK,cAAL,CAAT,CAT0C;EAW1C;;EACA2C,IAAAA,SAAS,CAAC3C,EAAD,CAAT,CAZ0C;;EAc1CgM,IAAAA,SAAS,CAAChM,EAAD,EAAK,SAAL,CAAT,CAd0C;;MAgB1C,IAAIE,OAAO,CAACqJ,EAAZ,EAAgB;EACZ;EACAvJ,MAAAA,EAAE,CAACsM,MAAH,CAAUpM,OAAO,CAACqJ,EAAlB,CAAA,CAAA;EACH,KAAA;EACJ,GApBD,CAF2B;;;IA0B3BtF,GAAG,CAACrH,SAAJ,CAAc0P,MAAd,GAAuB,SAASA,MAAT,CAAgB/C,EAAhB,EAAoB;MACvC,IAAMvJ,EAAE,GAAG,IAAX,CAAA;EACAuJ,IAAAA,EAAE,GAAGpH,QAAQ,CAACoK,aAAT,CAAuBhD,EAAvB,CAAL,CAAA;EACA,IAAA,IAAIiD,GAAG,GAAGxM,EAAE,CAAC6C,QAAb,CAAA;MACA,IAAIgE,QAAJ,CAJuC;;EAMvC,IAAA,IAAI,CAAC2F,GAAG,CAACvF,MAAT,EAAiB;EACb;EACA,MAAA,IAAI,CAACuF,GAAG,CAAC3F,QAAL,IAAiB0C,EAArB,EAAyB;EACrB;UACA1C,QAAQ,GAAG0C,EAAE,CAACkD,SAAd,CAAA;EAEH,OAJD,MAIO;UACH5F,QAAQ,GAAG2F,GAAG,CAAC3F,QAAf,CAAA;EACH,OAAA;EACJ,KAAA;;EAED,IAAA,IAAIA,QAAJ,EAAc;EACV;EACA;EACA,MAAA,IAAI,gBAAiBmB,CAAAA,IAAjB,CAAsBnB,QAAtB,CAAJ,EAAqC;EACjC;EACAA,QAAAA,QAAQ,GAAG1E,QAAQ,CAACoK,aAAT,CAAuB1F,QAAvB,EAAiC6F,SAA5C,CAAA;EACH,OANS;EAQV;;;QACA7F,QAAQ,GAAGA,QAAQ,CAACf,OAAT,CAAiB,aAAjB,EAAgC,EAAhC,CAAX,CAAA;EACA,MAAA,IAAMmB,MAAM,GAAGL,iBAAiB,CAACC,QAAD,CAAhC,CAAA;QACA2F,GAAG,CAACvF,MAAJ,GAAaA,MAAb,CAAA;EACH,KA7BsC;;;EA+BvC6D,IAAAA,cAAc,CAAC9K,EAAD,EAAKuJ,EAAL,CAAd,CA/BuC;KAA3C,CAAA;EAkCH,CAAA;EACD;EACA;EACA;EACA;EACA;;EC3EO,SAASoD,mBAAT,CAA6B1I,GAA7B,EAAkC;EACrCA,EAAAA,GAAG,CAAC/D,OAAJ,GAAc,EAAd,CADqC;EAErC;;EACA+D,EAAAA,GAAG,CAAC2I,KAAJ,GAAY,SAASA,KAAT,CAAeA,KAAf,EAAsB;EAC9B;MACA,IAAK1M,CAAAA,OAAL,GAAewL,YAAY,CAACzH,GAAG,CAAC/D,OAAL,EAAc0M,KAAd,CAA3B,CAF8B;;EAG9B,IAAA,OAAO,IAAP,CAAA;KAHJ,CAAA;EAKH;;ECLD;EACA;EACA;EACA;;EAEA,SAAS3I,GAAT,CAAa/D,OAAb,EAAsB;EAClB;IACA,IAAKkM,CAAAA,KAAL,CAAWlM,OAAX,CAAA,CAAA;EACH,CAAA;;EAEDiM,SAAS,CAAClI,GAAD,CAAT;;EACAkG,YAAY,CAAClG,GAAD,CAAZ;;EAEA0I,mBAAmB,CAAC1I,GAAD,CAAnB,CAAA;EACAD,cAAc,CAACC,GAAD,CAAd;;;;;;;;"}